/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/index.ts");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/api/api-swagger.json":
/*!**********************************!*\
  !*** ./src/api/api-swagger.json ***!
  \**********************************/
/*! exports provided: openapi, info, servers, paths, components, default */
/***/ (function(module) {

eval("module.exports = {\"openapi\":\"3.0.1\",\"info\":{\"title\":\"Transcriber API\",\"version\":\"2.0\",\"description\":\"### Authentication\\n\\n* Setup you application to use [Azure AD JWT Token](https://docs.microsoft.com/en-us/azure/active-directory/develop/id-tokens) or\\n* Setup your application to use [Firebase JWT Custom Token](https://firebase.google.com/docs/auth/admin/create-custom-tokens) or\\n* Use [Transcriber Cli](https://github.com/nrkno/transcriber-cli) to generate Firebase Custom Token \"},\"servers\":[{\"url\":\"/api\"}],\"paths\":{\"/transcriptId\":{\"post\":{\"summary\":\"Create a new ID. This ID is required for creating upload URL later.\",\"security\":[{\"bearerAuth\":[]}],\"operationId\":\"createTranscriptId\",\"tags\":[\"transcriptId\"],\"parameters\":[],\"responses\":{\"200\":{\"description\":\"Expected response to a valid request\",\"content\":{\"application/json\":{\"schema\":{\"$ref\":\"#/components/schemas/TranscriptId\"}}}},\"401\":{\"$ref\":\"#/components/responses/UnAuthenticatedError\"},\"403\":{\"$ref\":\"#/components/responses/UnAuthorizedError\"},\"default\":{\"description\":\"unexpected error\",\"content\":{\"application/json\":{\"schema\":{\"$ref\":\"#/components/schemas/Error\"}}}}}}},\"/uploadUrl\":{\"post\":{\"summary\":\"Create url you can use to upload the media file to Google Storage.\",\"security\":[{\"bearerAuth\":[]}],\"operationId\":\"createUploadUrl\",\"tags\":[\"uploadUrl\"],\"parameters\":[{\"name\":\"transcriptId\",\"in\":\"query\",\"required\":true,\"description\":\"The transcriptId generated from the /api/transcriptId call.\",\"schema\":{\"type\":\"string\"}},{\"name\":\"X-Content-Type\",\"in\":\"header\",\"required\":true,\"description\":\"Content Type need to match the Content-Type used when you upload the file. Eg: audio/mpeg.\",\"schema\":{\"type\":\"string\"}}],\"responses\":{\"200\":{\"description\":\"Expected response to a valid request\",\"content\":{\"application/json\":{\"schema\":{\"$ref\":\"#/components/schemas/UploadUrl\"}}}},\"201\":{\"description\":\"Response as redirect url, when acceapt header != application/json\"},\"401\":{\"$ref\":\"#/components/responses/UnAuthenticatedError\"},\"403\":{\"$ref\":\"#/components/responses/UnAuthorizedError\"},\"default\":{\"description\":\"unexpected error\",\"content\":{\"application/json\":{\"schema\":{\"$ref\":\"#/components/schemas/Error\"}}}}}}},\"/uploadFile\":{\"post\":{\"tags\":[\"uploadFile\"],\"summary\":\"You need to use eg. curl to upload a file using the url you got from /uploadUrl\",\"description\":\"### Upload File with Curl \\n* exportFILE_PATH=<full_path>\\n* export UPLOAD_URL=<from_uploadUrl_above<\\n* CONTENT_TYPE=<as_used_in_uploadUrl> eg.audio/mpeg\\n\\n ```curl -X PUT --data-binary @$FILE_PATH -H \\\"Content-Type: $CONTENT_TYPE\\\" $UPLOAD_URL```\\n\"}},\"/transcripts/{transcriptId}\":{\"post\":{\"summary\":\"Create transcription details. Require that a file has been uploaded using /uploadUrl. When these details are created, transcription will start automatically.\",\"security\":[{\"bearerAuth\":[]}],\"operationId\":\"createTranscription\",\"tags\":[\"transcripts\"],\"parameters\":[{\"name\":\"transcriptId\",\"in\":\"path\",\"required\":true,\"description\":\"The id of the transcript\",\"schema\":{\"type\":\"string\"}}],\"requestBody\":{\"description\":\"Optional description in *Markdown*\",\"content\":{\"application/json\":{\"schema\":{\"$ref\":\"#/components/schemas/CreateTranscription\"}}},\"required\":true},\"responses\":{\"202\":{\"description\":\"Follow location header to find transcription status.\"},\"401\":{\"$ref\":\"#/components/responses/UnAuthenticatedError\"},\"403\":{\"$ref\":\"#/components/responses/UnAuthorizedError\"},\"422\":{\"$ref\":\"#/components/responses/RequiredParametersMissingError\"},\"default\":{\"description\":\"unexpected error\",\"content\":{\"application/json\":{\"schema\":{\"$ref\":\"#/components/schemas/Error\"}}}}}},\"get\":{\"summary\":\"Fetch the transcription details.\",\"security\":[{\"bearerAuth\":[]}],\"operationId\":\"getTranscriptById\",\"tags\":[\"transcripts\"],\"parameters\":[{\"name\":\"transcriptId\",\"in\":\"path\",\"required\":true,\"description\":\"The id of the transcript to fetch\",\"schema\":{\"type\":\"string\"}}],\"responses\":{\"200\":{\"description\":\"Expected response to a valid request\",\"content\":{\"application/json\":{\"schema\":{\"$ref\":\"#/components/schemas/Transcript\"}}}},\"401\":{\"$ref\":\"#/components/responses/UnAuthenticatedError\"},\"403\":{\"$ref\":\"#/components/responses/UnAuthorizedError\"},\"404\":{\"$ref\":\"#/components/responses/TranscriptNotFoundError\"},\"422\":{\"$ref\":\"#/components/responses/RequiredParametersMissingError\"},\"default\":{\"description\":\"unexpected error\",\"content\":{\"application/json\":{\"schema\":{\"$ref\":\"#/components/schemas/Error\"}}}}}}},\"/transcripts/{transcriptId}/export\":{\"get\":{\"summary\":\"Export transcribed words to Json, Docx or XMP\",\"description\":\"### Export Format\\nSelect Accept header to either\\n* application/json\\n* application/docx\\n* application/xmp\",\"security\":[{\"bearerAuth\":[]}],\"operationId\":\"exportTranscriptById\",\"tags\":[\"export\"],\"parameters\":[{\"name\":\"transcriptId\",\"in\":\"path\",\"required\":true,\"description\":\"The id of the transcript to export\",\"schema\":{\"type\":\"string\"}}],\"responses\":{\"200\":{\"description\":\"Expected response to a valid request\",\"content\":{\"application/json\":{\"schema\":{\"$ref\":\"#/components/schemas/ExportedTranscriptJson\"}},\"application/docx\":{\"schema\":{\"type\":\"string\",\"format\":\"xml\"}},\"application/xmp\":{\"schema\":{\"type\":\"string\",\"format\":\"binary\"}}}},\"401\":{\"$ref\":\"#/components/responses/UnAuthenticatedError\"},\"403\":{\"$ref\":\"#/components/responses/UnAuthorizedError\"},\"404\":{\"$ref\":\"#/components/responses/TranscriptNotFoundError\"},\"422\":{\"$ref\":\"#/components/responses/RequiredParametersMissingError\"},\"default\":{\"description\":\"unexpected error\",\"content\":{\"application/json\":{\"schema\":{\"$ref\":\"#/components/schemas/Error\"}}}}}}}},\"components\":{\"schemas\":{\"TranscriptId\":{\"required\":[\"transcriptId\"],\"properties\":{\"transcriptId\":{\"type\":\"string\"}}},\"CreateTranscription\":{\"required\":[\"originalMimeType\"],\"properties\":{\"originalMimeType\":{\"type\":\"string\",\"description\":\"The Content-Type used when uploading the audio or video file.\"}}},\"Transcript\":{\"required\":[\"id\",\"status\",\"userId\"],\"properties\":{\"id\":{\"type\":\"string\"},\"status\":{\"type\":\"object\",\"properties\":{\"progress\":{\"type\":\"string\"}}},\"userId\":{\"type\":\"string\"},\"paragraphs\":{\"type\":\"array\",\"items\":{\"$ref\":\"#/components/schemas/Paragraph\"}},\"metadata\":{\"type\":\"object\",\"properties\":{\"audioDuration\":{\"type\":\"integer\"},\"languageCodes\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}},\"originalMimeType\":{\"type\":\"string\"}}},\"playbackGsUrl\":{\"type\":\"string\",\"format\":\"uri\"}}},\"Paragraph\":{\"properties\":{\"startTime\":{\"type\":\"integer\"},\"words\":{\"type\":\"array\",\"items\":{\"$ref\":\"#/components/schemas/Word\"}}}},\"Word\":{\"properties\":{\"endTime\":{\"type\":\"integer\"},\"confidence\":{\"type\":\"number\"},\"startTime\":{\"type\":\"integer\"},\"text\":{\"type\":\"string\"}}},\"TransctriptList\":{\"type\":\"array\",\"items\":{\"$ref\":\"#/components/schemas/Transcript\"}},\"ExportedTranscriptJson\":{\"type\":\"array\",\"items\":{\"$ref\":\"#/components/schemas/ExportedTranscriptJsonWords\"}},\"ExportedTranscriptJsonWords\":{\"properties\":{\"startTime\":{\"type\":\"string\"},\"words\":{\"type\":\"string\"}}},\"UploadUrl\":{\"required\":[\"uploadUrl\"],\"properties\":{\"uploadUrl\":{\"type\":\"string\"}}},\"Error\":{\"required\":[\"code\",\"message\"],\"properties\":{\"code\":{\"type\":\"integer\",\"format\":\"int32\"},\"message\":{\"type\":\"string\"}}}},\"securitySchemes\":{\"bearerAuth\":{\"type\":\"http\",\"scheme\":\"bearer\",\"bearerFormat\":\"JWT\"}},\"responses\":{\"UnAuthenticatedError\":{\"description\":\"Please add a valid token as header. Authorization: Bearer your_token . <br/>Both Azure AD Access Token and Firebase Custom Token is accepted.\"},\"UnAuthorizedError\":{\"description\":\"Please add a valid token as header. Authorization: Bearer your_token . <br/>Both Azure AD Access Token and Firebase Custom Token is accepted.\"},\"TranscriptNotFoundError\":{\"description\":\"No Transcript was found.\"},\"RequiredParametersMissingError\":{\"description\":\"Required Parameters are missing in your request. Each response will notify the client of what info is missing.\"}}}};\n\n//# sourceURL=webpack:///./src/api/api-swagger.json?");

/***/ }),

/***/ "./src/api/authenticatedApi.ts":
/*!*************************************!*\
  !*** ./src/api/authenticatedApi.ts ***!
  \*************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var cookie_parser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! cookie-parser */ \"cookie-parser\");\n/* harmony import */ var cookie_parser__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(cookie_parser__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var cors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! cors */ \"cors\");\n/* harmony import */ var cors__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(cors__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var express__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! express */ \"express\");\n/* harmony import */ var express__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(express__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var firebase_admin__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! firebase-admin */ \"firebase-admin\");\n/* harmony import */ var firebase_admin__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(firebase_admin__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var firebase_functions__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! firebase-functions */ \"firebase-functions\");\n/* harmony import */ var firebase_functions__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(firebase_functions__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var googleapis__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! googleapis */ \"googleapis\");\n/* harmony import */ var googleapis__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(googleapis__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var jsonwebtoken__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! jsonwebtoken */ \"jsonwebtoken\");\n/* harmony import */ var jsonwebtoken__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(jsonwebtoken__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var serialize_error__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! serialize-error */ \"serialize-error\");\n/* harmony import */ var serialize_error__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(serialize_error__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var universal_analytics__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! universal-analytics */ \"universal-analytics\");\n/* harmony import */ var universal_analytics__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(universal_analytics__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var _database__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../database */ \"./src/database.ts\");\n/* harmony import */ var _enums__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../enums */ \"./src/enums.ts\");\n/* harmony import */ var _exportTranscript_docx__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../exportTranscript/docx */ \"./src/exportTranscript/docx.ts\");\n/* harmony import */ var _exportTranscript_json__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../exportTranscript/json */ \"./src/exportTranscript/json.ts\");\n/* harmony import */ var _exportTranscript_xmp__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../exportTranscript/xmp */ \"./src/exportTranscript/xmp.ts\");\n/* harmony import */ var _transcription__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../transcription */ \"./src/transcription/index.ts\");\n/* harmony import */ var _transcription_storage__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../transcription/storage */ \"./src/transcription/storage.ts\");\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n/**\n * @file Authenticate user from Authorization header\n * @author Bard Lind (bard.lind@gmail.com)\n */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst app = express__WEBPACK_IMPORTED_MODULE_2___default()(); // ----------------\n// Google analytics\n// ----------------\n\nconst accountId = firebase_functions__WEBPACK_IMPORTED_MODULE_4__[\"config\"]().analytics.account_id;\n\nif (!accountId) {\n  console.warn(\"Google Analytics account ID missing\");\n}\n\nconst visitor = universal_analytics__WEBPACK_IMPORTED_MODULE_8___default()(accountId); // Only initialise the app once\n\nif (!firebase_admin__WEBPACK_IMPORTED_MODULE_3___default.a.apps.length) {\n  firebase_admin__WEBPACK_IMPORTED_MODULE_3___default.a.initializeApp(firebase_functions__WEBPACK_IMPORTED_MODULE_4__[\"config\"]().firebase);\n} else {\n  firebase_admin__WEBPACK_IMPORTED_MODULE_3___default.a.app();\n} // let googleAuth: any = null;\n// (async () => {\n//       googleAuth = await google.auth.getClient({\n//         scopes: ['https://www.googleapis.com/auth/cloud-platform']\n//     });\n//      console.log(\"googleAuth: \", googleAuth)\n// })();\n\n\nconst gaxOpts = {\n  clientConfig: {} // Express middleware that validates Firebase ID Tokens passed in the Authorization HTTP header.\n  // The Firebase ID token needs to be passed as a Bearer token in the Authorization HTTP header like this:\n  // `Authorization: Bearer <Firebase ID Token>`.\n  // when decoded successfully, the ID Token content will be added as `req.user`.\n\n};\n\nconst validateFirebaseIdToken = (req, res, next) => {\n  console.log('Check if request is authorized with Firebase ID token');\n\n  if ((!req.headers.authorization || !req.headers.authorization.startsWith('Bearer ')) && !(req.cookies && req.cookies.__session)) {\n    console.error('No Firebase ID token was passed as a Bearer token in the Authorization header.', 'Make sure you authorize your request by providing the following HTTP header:', 'Authorization: Bearer <Firebase ID Token>', 'or by passing a \"__session\" cookie.');\n    res.status(403).send('Unauthorized');\n    return;\n  }\n\n  let idToken;\n\n  if (req.headers.authorization && req.headers.authorization.startsWith('Bearer ')) {\n    console.log('Found \"Authorization\" header'); // Read the ID Token from the Authorization header.\n\n    idToken = req.headers.authorization.split('Bearer ')[1];\n  } else if (req.cookies) {\n    console.log('Found \"__session\" cookie'); // Read the ID Token from cookie.\n\n    idToken = req.cookies.__session;\n  } else {\n    // No cookie\n    res.status(403).send('Unauthorized');\n    return;\n  }\n\n  firebase_admin__WEBPACK_IMPORTED_MODULE_3___default.a.auth().verifyIdToken(idToken).then(decodedIdToken => {\n    console.log('ID Token correctly decoded', decodedIdToken);\n    req.user = decodedIdToken;\n    visitor.event(\"api\", \"authorization\", \"idtoken\", decodedIdToken).send();\n    return next();\n  }).catch(error => {\n    console.log('Error while verifying Firebase ID token:', error);\n\n    if (error.code === \"auth/argument-error\") {\n      // TODO validate the signature\n      console.log(\"Will try to iterpet this token as an custom token \");\n      const decoded = jsonwebtoken__WEBPACK_IMPORTED_MODULE_6___default.a.decode(idToken);\n      console.log(\"Decoded token: \", decoded);\n      const user = {\n        user_id: decoded.uid\n      };\n      req.user = user;\n      visitor.event(\"api\", \"authorization\", \"customtoken\", decoded).send();\n      return next();\n    } else {\n      visitor.event(\"api\", \"authorization\", \"failed\", idToken).send();\n      res.status(403).send('Unauthorized');\n    }\n  });\n};\n\napp.use(cors__WEBPACK_IMPORTED_MODULE_1___default()());\napp.use(cookie_parser__WEBPACK_IMPORTED_MODULE_0___default()());\napp.use(validateFirebaseIdToken);\napp.get('/hello', (req, res) => {\n  res.status(200).send(`Hello ${req.user.user_id}`);\n});\n\nfunction doAcceptJson(request) {\n  let acceptJson = false;\n\n  if (request && request.header('Accept')) {\n    if (request.header('Accept').includes(\"application/json\")) {\n      acceptJson = true;\n    }\n  }\n\n  return acceptJson;\n}\n\napp.post('/transcriptId', (req, res) => {\n  const transcriptId = _database__WEBPACK_IMPORTED_MODULE_9__[\"default\"].buildNewId();\n  console.log(\"transcriptId: \", transcriptId);\n\n  if (doAcceptJson(req)) {\n    const transcriptIdJson = {\n      transcriptId\n    };\n    res.contentType(\"application/json\").status(200).send(JSON.stringify(transcriptIdJson));\n  } else {\n    res.status(200).send(transcriptId);\n  }\n});\napp.post('/uploadUrl', (req, res) => {\n  const transcriptId = req.query.transcriptId;\n\n  if (!transcriptId) {\n    res.status(422).send(\"Missing the transcriptId query parameter\");\n  }\n\n  const userId = req.user.user_id;\n  visitor.set(\"uid\", userId);\n\n  if (!userId) {\n    res.status(422).send(\"Missing the user_id from your authorization token.\");\n  }\n\n  const file = _transcription_storage__WEBPACK_IMPORTED_MODULE_15__[\"bucket\"].file(\"media/\" + userId + \"/\" + transcriptId + \"-original\");\n  let contentType = req.header(\"X-Content-Type\");\n\n  if (!contentType) {\n    contentType = req.header(\"Content-Type\");\n\n    if (!contentType) {\n      res.status(422).send(\"Missing the X-Content-Type header parameter. Use eg audio/mpeg for any audio format.\");\n    }\n  }\n\n  const config = {\n    action: 'write',\n    contentType,\n    expires: '03-17-2025'\n  };\n  const data = file.getSignedUrl(config).then(signedUrlData => {\n    const url = signedUrlData[0];\n\n    if (doAcceptJson(req)) {\n      const uploadUrlJson = {\n        uploadUrl: url\n      };\n      res.contentType(\"application/json\").status(200).send(JSON.stringify(uploadUrlJson));\n    } else {\n      res.status(201).send(url);\n    }\n  }).catch(err => {\n    console.error(\"Failed to create uploadUrl. Reason: \", err);\n    res.status(412).send(\"Failed to create uploadUrl for transcriptId: \" + transcriptId);\n  });\n});\napp.post('/transcripts/:transcriptId', (req, res) => {\n  const transcriptId = req.params.transcriptId;\n\n  if (!transcriptId) {\n    res.status(422).send(\"Missing the transcriptId query parameter\");\n  }\n\n  console.log(\"Create Transcript from body: \", req.body, \" transcriptId: \", transcriptId);\n  let mimeType = req.query.originalMimeType;\n\n  if (!mimeType) {\n    mimeType = req.body.originalMimeType;\n  }\n\n  if (!mimeType) {\n    res.status(422).send(\"Missing the originalMimeType body parameter.\");\n  }\n\n  const userId = req.user.user_id;\n\n  if (!userId) {\n    res.status(422).send(\"Missing the user_id from your authorization token.\");\n  }\n\n  let languageCode = req.query.languageCode;\n\n  if (!languageCode) {\n    languageCode = req.body.languageCode;\n  }\n\n  if (!languageCode) {\n    languageCode = \"nb-NO\";\n  }\n\n  visitor.set(\"uid\", userId);\n  const transcript = {\n    metadata: {\n      languageCodes: [languageCode],\n      originalMimeType: mimeType\n    },\n    status: {\n      progress: _enums__WEBPACK_IMPORTED_MODULE_10__[\"ProgressType\"].Uploading\n    },\n    userId\n  };\n  _database__WEBPACK_IMPORTED_MODULE_9__[\"default\"].updateTranscript(transcriptId, transcript).then(transcriptDoc => {\n    const locationUri = \"/api/transcripts/\" + transcriptId;\n    visitor.event(\"api\", \"transcripts\", \"update\", transcriptId);\n    const message = \"Follow location header to find transcription status.\";\n\n    if (doAcceptJson(req)) {\n      const messageJson = {\n        message\n      };\n      res.location(locationUri).contentType(\"application/json\").status(202).send(JSON.stringify(messageJson));\n    } else {\n      res.location(locationUri).status(202).send(message);\n    }\n  }).catch(error => {\n    console.error(\"Failed to update Transcript. Reason: \", error);\n    visitor.exception(error.message, true).send();\n    const message = \"Failed to create transcription Doc for transcriptId: \" + transcriptId;\n\n    if (doAcceptJson(req)) {\n      const messageJson = {\n        message\n      };\n      res.contentType(\"application/json\").status(412).send(messageJson);\n    } else {\n      res.status(412).send(message);\n    }\n  });\n});\napp.get('/transcripts/:transcriptId',\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(function* (req, res) {\n    const transcriptId = req.params.transcriptId;\n\n    if (!transcriptId) {\n      res.status(422).send(\"Missing the transcriptId query parameter\");\n    }\n\n    try {\n      const transcript = yield _database__WEBPACK_IMPORTED_MODULE_9__[\"default\"].getTranscript(transcriptId);\n      transcript.id = transcriptId;\n      const paragraphs = yield _database__WEBPACK_IMPORTED_MODULE_9__[\"default\"].getParagraphs(transcriptId);\n      transcript.paragraphs = paragraphs;\n      console.log(\"Found transcript: \", transcript);\n\n      if (transcript && transcript.userId) {\n        if (transcript.userId === req.user.user_id) {\n          res.contentType(\"application/json\").status(200).send(transcript);\n        } else {\n          console.log(\"Transcript \", transcriptId, \" was found. The userId's do not match. from IdToken: \", req.user.user_id, \" from transcript: \", transcript.userId);\n          res.send(404);\n        }\n      } else {\n        console.log(\"Transcript \", transcriptId, \" does not exist.\");\n        res.send(404);\n      }\n    } catch (error) {\n      // Log error to console\n      console.error(\"Failed to fetch transcript. transcriptId: \", transcriptId, \". Error: \", error); // Log error to Google Analytics\n      // visitor.exception(error.message, true).send()\n\n      res.status(500).send(serialize_error__WEBPACK_IMPORTED_MODULE_7___default()(error));\n    }\n  });\n\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}());\napp.get('/transcripts/:transcriptId/export',\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(function* (req, res) {\n    const transcriptId = req.params.transcriptId;\n    const exportTo = req.header('Accept');\n\n    if (!transcriptId) {\n      res.status(422).send(\"Missing the transcriptId query parameter\");\n    }\n\n    try {\n      const transcript = yield _database__WEBPACK_IMPORTED_MODULE_9__[\"default\"].getTranscript(transcriptId);\n      const paragraphs = yield _database__WEBPACK_IMPORTED_MODULE_9__[\"default\"].getParagraphs(transcriptId);\n      console.log(\"Found transcript: \", transcript);\n\n      if (transcript && transcript.userId) {\n        if (transcript.userId === req.user.user_id) {\n          if (exportTo === \"application/json\") {\n            Object(_exportTranscript_json__WEBPACK_IMPORTED_MODULE_12__[\"default\"])(transcript, paragraphs, res);\n          } else if (exportTo === \"application/docx\") {\n            yield Object(_exportTranscript_docx__WEBPACK_IMPORTED_MODULE_11__[\"default\"])(transcript, paragraphs, res);\n          } else if (exportTo === \"application/xmp\") {\n            Object(_exportTranscript_xmp__WEBPACK_IMPORTED_MODULE_13__[\"default\"])(transcript, paragraphs, res);\n          } else {\n            console.log(\"Unknown export format: \", exportTo);\n            res.status(422).send(\"Please state your expected export format in the 'Accept:' header. \" + \"Supported values are: 'application/json', 'application/docx'\");\n          }\n        } else {\n          console.log(\"Transcript \", transcriptId, \" was found. The userId's do not match. from IdToken: \", req.user.user_id, \" from transcript: \", transcript.userId);\n          res.send(404);\n        }\n      } else {\n        console.log(\"Transcript \", transcriptId, \" does not exist.\");\n        res.send(404);\n      }\n    } catch (error) {\n      // Log error to console\n      console.error(\"Failed to fetch transcript. transcriptId: \", transcriptId, \". Error: \", error); // Log error to Google Analytics\n      // visitor.exception(error.message, true).send()\n\n      res.status(500).send(serialize_error__WEBPACK_IMPORTED_MODULE_7___default()(error));\n    }\n  });\n\n  return function (_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}());\napp.get('/operations/:googleSpeechRef',\n/*#__PURE__*/\nfunction () {\n  var _ref3 = _asyncToGenerator(function* (req, res) {\n    const googleSpeechRef = req.params.googleSpeechRef;\n\n    if (!googleSpeechRef) {\n      res.status(422).send(\"Missing the googleSpeechRef path parameter\");\n    }\n\n    try {\n      const googleAuth = yield googleapis__WEBPACK_IMPORTED_MODULE_5__[\"google\"].auth.getClient({\n        scopes: ['https://www.googleapis.com/auth/cloud-platform']\n      });\n      const {\n        data\n      } = yield googleapis__WEBPACK_IMPORTED_MODULE_5__[\"google\"].speech('v1').operations.get({\n        auth: googleAuth,\n        name: googleSpeechRef\n      });\n      console.log(\"Result from operations.get: \", data);\n      /*\n      data:\n       { name: '6080322534027970989',\n      metadata:\n      { '@type': 'type.googleapis.com/google.cloud.speech.v1p1beta1.LongRunningRecognizeMetadata',\n      progressPercent: 100,\n      startTime: '2019-05-24T17:18:26.958133Z',\n      lastUpdateTime: '2019-05-24T17:18:33.168022Z' },\n      done: true,\n      response:\n      { '@type': 'type.googleapis.com/google.cloud.speech.v1p1beta1.LongRunningRecognizeResponse',\n      results: [ [Object] ] } }\n       */\n\n      const responses = null;\n\n      if (data.done === true) {\n        const longRunningRecognizeResponse = data.response;\n        console.log(\"getOperation. responses: \", longRunningRecognizeResponse);\n\n        if (longRunningRecognizeResponse) {\n          const speechRecognitionResults = longRunningRecognizeResponse.results;\n          console.log(\"complete: \", speechRecognitionResults);\n          res.contentType(\"application/json\").status(200).send(JSON.stringify(speechRecognitionResults));\n        } else {\n          res.status(412).send(\"No response found\");\n        }\n      } else if (data.metadata) {\n        res.contentType(\"application/json\").status(200).send(JSON.stringify(data.metadata));\n      } else {\n        res.send(404);\n      }\n    } catch (error) {\n      console.error(\"Failed to fetch operation by googleSpeechRef: \", googleSpeechRef, \". Error: \", error);\n      res.status(500).send(serialize_error__WEBPACK_IMPORTED_MODULE_7___default()(error));\n    }\n  });\n\n  return function (_x5, _x6) {\n    return _ref3.apply(this, arguments);\n  };\n}());\napp.post('/transcriptions/:transcriptionId/refreshFromGoogleSpeech',\n/*#__PURE__*/\nfunction () {\n  var _ref4 = _asyncToGenerator(function* (req, res) {\n    const transcriptId = req.params.transcriptionId;\n\n    if (!transcriptId) {\n      res.status(422).send(\"Missing the transcriptId query parameter\");\n    }\n\n    console.log(\"refreshFromGoogleSpeech. transcriptionId: \", transcriptId);\n\n    try {\n      const status = yield Object(_transcription__WEBPACK_IMPORTED_MODULE_14__[\"updateFromGoogleSpeech\"])(transcriptId);\n      res.send(status);\n    } catch (error) {\n      console.error(\"Failed to fetch operation by transcriptionId: \", transcriptId, \". Error: \", error);\n      res.status(500).send(serialize_error__WEBPACK_IMPORTED_MODULE_7___default()(error));\n    }\n  });\n\n  return function (_x7, _x8) {\n    return _ref4.apply(this, arguments);\n  };\n}());\n/* harmony default export */ __webpack_exports__[\"default\"] = (app);\n\n//# sourceURL=webpack:///./src/api/authenticatedApi.ts?");

/***/ }),

/***/ "./src/api/index.ts":
/*!**************************!*\
  !*** ./src/api/index.ts ***!
  \**************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// import {GetSignedUrlConfig} from \"@google-cloud/storage\"\n// import * as functions from \"firebase-functions\"\n// import serializeError from \"serialize-error\";\n// import database from \"../database\";\n// import {ProgressType} from \"../enums\";\n// import {ITranscript} from \"../interfaces\";\n// import {bucket} from \"../transcription/storage\"\nconst api = (() => {\n  /*\n      async function createTranscriptId(request: functions.Request, response: functions.Response) {\n          const transcriptId = database.buildNewId();\n          console.log(\"transcriptId: \", transcriptId);\n          response.status(200).send(transcriptId);\n      }\n      async function getUploadUrl(request: functions.Request, response: functions.Response) {\n          const transcriptId = request.query.transcriptId;\n          if (!transcriptId) {\n              response.status(422).send(\"Missing the transcriptId query parameter\");\n          }\n          const userId = request.query.userId;\n          if (!userId) {\n              response.status(422).send(\"Missing the userId query parameter\");\n          }\n          const file = bucket.file(\"media/\" + userId + \"/\" + transcriptId + \"-original\");\n          const contentType = request.header(\"Content-Type\");\n          if (!contentType) {\n              response.status(422).send(\"Missing the Content-Type header parameter\");\n          }\n          const config: GetSignedUrlConfig = {\n              action: 'write',\n              contentType,\n              expires: '03-17-2025'\n          }\n          const data = await file.getSignedUrl(config)\n          const url = data[0];\n          response.status(200).send(url);\n      }\n  \n      async function createTransctript(request: functions.Request, response: functions.Response) {\n          const id = request.query.transcriptId;\n          const mimeType = request.query.originalMimeType;\n          const userId = request.query.userId;\n          if (!userId) {\n              response.status(422).send(\"Missing the userId query parameter\");\n          }\n          const transcript: ITranscript = {\n              metadata: {\n                  languageCodes: [\"nb-NO\"],\n                  originalMimeType: mimeType\n              },\n              status: {\n                  progress: ProgressType.Uploading\n              },\n              userId\n          };\n  \n          const transcriptDoc = await database.updateTranscript(id, transcript);\n  \n          response.status(200).send(transcriptDoc);\n      }\n  \n      async function getTranscript(request: functions.Request, response: functions.Response) {\n          const transcriptId = request.query.transcriptId\n  \n          if (!transcriptId) {\n              response.status(422).send(\"Missing the transcriptId query parameter\")\n          }\n  \n          try {\n              const transcript = await database.getTranscript(transcriptId);\n              response.status(200).send(transcript);\n          } catch (error) {\n              // Log error to console\n              console.error(\"Failed to fetch transcript. transcriptId: \", transcriptId, \". Error: \", error);\n  \n              // Log error to Google Analytics\n              // visitor.exception(error.message, true).send()\n  \n              response.status(500).send(serializeError(error))\n          }\n      }\n  */\n  return {};\n})();\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (api);\n\n//# sourceURL=webpack:///./src/api/index.ts?");

/***/ }),

/***/ "./src/authorization/index.ts":
/*!************************************!*\
  !*** ./src/authorization/index.ts ***!
  \************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var firebase_admin__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! firebase-admin */ \"firebase-admin\");\n/* harmony import */ var firebase_admin__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(firebase_admin__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var firebase_functions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! firebase-functions */ \"firebase-functions\");\n/* harmony import */ var firebase_functions__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(firebase_functions__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var jsonwebtoken__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! jsonwebtoken */ \"jsonwebtoken\");\n/* harmony import */ var jsonwebtoken__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(jsonwebtoken__WEBPACK_IMPORTED_MODULE_2__);\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n\n\n\n\nconst authorization = (() => {\n  // Only initialise the app once\n  if (!firebase_admin__WEBPACK_IMPORTED_MODULE_0___default.a.apps.length) {\n    firebase_admin__WEBPACK_IMPORTED_MODULE_0___default.a.initializeApp(firebase_functions__WEBPACK_IMPORTED_MODULE_1___default.a.config().firebase);\n  } else {\n    firebase_admin__WEBPACK_IMPORTED_MODULE_0___default.a.app();\n  }\n\n  function authorizeADJwtToken(_x, _x2) {\n    return _authorizeADJwtToken.apply(this, arguments);\n  }\n\n  function _authorizeADJwtToken() {\n    _authorizeADJwtToken = _asyncToGenerator(function* (req, res) {\n      const authorizaton = req.header(\"Authorization\");\n\n      if (authorizaton && authorizaton.startsWith(\"Bearer \")) {\n        const jwttoken = authorizaton.split(\" \"); // @ts-ignore\n\n        const decoded = jsonwebtoken__WEBPACK_IMPORTED_MODULE_2___default.a.decode(jwttoken[1]); // proxy checks if the token is valid, just trust it here..\n\n        const oid = decoded.oid;\n        let shouldCreateUser = false;\n\n        try {\n          yield firebase_admin__WEBPACK_IMPORTED_MODULE_0___default.a.auth().getUser(oid);\n        } catch (error) {\n          if (error.code === \"auth/user-not-found\") {\n            // User doesn't exist yet, create it...\n            shouldCreateUser = true;\n          } else {\n            console.log(`Error in getUser(${oid}): `, error);\n            res.status(500).send(error);\n          }\n        }\n\n        try {\n          // If the user doesn't exist, we create it\n          if (shouldCreateUser === true) {\n            console.log(`Creating new user with ${oid}`);\n            let email = decoded.email;\n\n            if (!email) {\n              email = decoded.upn;\n            }\n\n            const createRequest = {\n              displayName: decoded.name,\n              email,\n              uid: oid\n            };\n            yield firebase_admin__WEBPACK_IMPORTED_MODULE_0___default.a.auth().createUser(createRequest);\n          }\n\n          console.log(`Creating custom token for oid ${oid}`);\n          yield firebase_admin__WEBPACK_IMPORTED_MODULE_0___default.a.auth().createCustomToken(oid).then(customToken => {\n            // Send token back to client\n            res.setHeader(\"Content-Type\", \"application/json\");\n            res.send(JSON.stringify({\n              token: customToken\n            }));\n          });\n        } catch (error) {\n          console.error(error);\n          res.status(500).send(error);\n        }\n      } else {\n        res.send(403);\n      }\n    });\n    return _authorizeADJwtToken.apply(this, arguments);\n  }\n\n  return {\n    authorizeADJwtToken\n  };\n})();\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (authorization);\n\n//# sourceURL=webpack:///./src/authorization/index.ts?");

/***/ }),

/***/ "./src/database.ts":
/*!*************************!*\
  !*** ./src/database.ts ***!
  \*************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var firebase_admin__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! firebase-admin */ \"firebase-admin\");\n/* harmony import */ var firebase_admin__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(firebase_admin__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var firebase_functions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! firebase-functions */ \"firebase-functions\");\n/* harmony import */ var firebase_functions__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(firebase_functions__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var serialize_error__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! serialize-error */ \"serialize-error\");\n/* harmony import */ var serialize_error__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(serialize_error__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _enums__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./enums */ \"./src/enums.ts\");\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n/**\n * @file Sets up Firebase\n * @author Andreas Schjønhaug\n */\n\n\n\n\n\n// Only initialise the app once\nif (!firebase_admin__WEBPACK_IMPORTED_MODULE_0___default.a.apps.length) {\n  console.debug(\"initialize app\");\n  firebase_admin__WEBPACK_IMPORTED_MODULE_0___default.a.initializeApp(firebase_functions__WEBPACK_IMPORTED_MODULE_1__[\"config\"]().firebase);\n} else {\n  console.debug(\"return initialized app\");\n  firebase_admin__WEBPACK_IMPORTED_MODULE_0___default.a.app();\n}\n\nconst db = firebase_admin__WEBPACK_IMPORTED_MODULE_0___default.a.firestore();\n\nconst database = (() => {\n  const updateTranscript =\n  /*#__PURE__*/\n  function () {\n    var _ref = _asyncToGenerator(function* (id, transcript) {\n      console.debug(\"updateTranscript: \", id, \" transcript: \", JSON.stringify(transcript));\n      return db.doc(`transcripts/${id}`).set(_objectSpread({}, transcript), {\n        merge: true\n      });\n    });\n\n    return function updateTranscript(_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  const setProgress =\n  /*#__PURE__*/\n  function () {\n    var _ref2 = _asyncToGenerator(function* (transcriptId, progress) {\n      console.debug(\"setProgress: \", transcriptId);\n      const lastUpdated = firebase_admin__WEBPACK_IMPORTED_MODULE_0___default.a.firestore.Timestamp.fromDate(new Date());\n      const transcript = {\n        status: {\n          progress,\n          lastUpdated\n        }\n      };\n\n      if (progress === _enums__WEBPACK_IMPORTED_MODULE_3__[\"ProgressType\"].Analysing || progress === _enums__WEBPACK_IMPORTED_MODULE_3__[\"ProgressType\"].Saving) {\n        transcript.status.percent = 0;\n      } else if (progress === _enums__WEBPACK_IMPORTED_MODULE_3__[\"ProgressType\"].Done) {\n        transcript.status.percent = firebase_admin__WEBPACK_IMPORTED_MODULE_0___default.a.firestore.FieldValue.delete();\n      }\n\n      return updateTranscript(transcriptId, transcript);\n    });\n\n    return function setProgress(_x3, _x4) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  const buildNewId = () => {\n    return db.collection(`transcripts`).doc().id;\n  };\n\n  const setPercent =\n  /*#__PURE__*/\n  function () {\n    var _ref3 = _asyncToGenerator(function* (transcriptId, percent) {\n      // console.debug(\"setPercent: \", transcriptId)\n      const lastUpdated = firebase_admin__WEBPACK_IMPORTED_MODULE_0___default.a.firestore.Timestamp.fromDate(new Date());\n      const transcript = {\n        status: {\n          percent,\n          lastUpdated\n        }\n      };\n      return updateTranscript(transcriptId, transcript);\n    });\n\n    return function setPercent(_x5, _x6) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  const addParagraph =\n  /*#__PURE__*/\n  function () {\n    var _ref4 = _asyncToGenerator(function* (transcriptId, paragraph, percent) {\n      // console.debug(\"addParagraph: \", transcriptId)\n      // Batch\n      const batch = db.batch(); // Add paragraph\n\n      const paragraphsRef = `transcripts/${transcriptId}/paragraphs`;\n      const paragraphId = db.collection(paragraphsRef).doc().id;\n      const paragraphReference = db.doc(`${paragraphsRef}/${paragraphId}`);\n      batch.create(paragraphReference, paragraph); // Set percent\n\n      const transcriptReference = db.doc(`transcripts/${transcriptId}`);\n      batch.update(transcriptReference, {\n        \"status.percent\": percent\n      }); // Commit\n\n      return batch.commit();\n    });\n\n    return function addParagraph(_x7, _x8, _x9) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  const setDuration =\n  /*#__PURE__*/\n  function () {\n    var _ref5 = _asyncToGenerator(function* (transcriptId, seconds) {\n      console.debug(\"setDuration: \", transcriptId);\n      const transcript = {\n        metadata: {\n          audioDuration: seconds\n        }\n      };\n      return updateTranscript(transcriptId, transcript);\n    });\n\n    return function setDuration(_x10, _x11) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  const updateFlacFileLocation =\n  /*#__PURE__*/\n  function () {\n    var _ref6 = _asyncToGenerator(function* (transcriptId, flacFileLocationUri) {\n      // console.debug(\"updateFlacFileLocation: \", transcriptId)\n      const transcript = {\n        speechData: {\n          flacFileLocationUri\n        }\n      };\n      return updateTranscript(transcriptId, transcript);\n    });\n\n    return function updateFlacFileLocation(_x12, _x13) {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n\n  const updateGoogleSpeechTranscribeReference =\n  /*#__PURE__*/\n  function () {\n    var _ref7 = _asyncToGenerator(function* (transcriptId, reference) {\n      console.debug(\"updateGoogleSpeechTranscribeReference: \", transcriptId);\n      const transcript = {\n        speechData: {\n          reference\n        }\n      };\n      return updateTranscript(transcriptId, transcript);\n    });\n\n    return function updateGoogleSpeechTranscribeReference(_x14, _x15) {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n\n  const errorOccured =\n  /*#__PURE__*/\n  function () {\n    var _ref8 = _asyncToGenerator(function* (transcriptId, error) {\n      const serializedError = serialize_error__WEBPACK_IMPORTED_MODULE_2___default()(error); // Firestore does not support undefined values, remove them if present.\n\n      Object.keys(serializedError).forEach(key => serializedError[key] === undefined && delete serializedError[key]);\n      const transcript = {\n        status: {\n          error: serializedError\n        }\n      };\n      return updateTranscript(transcriptId, transcript);\n    });\n\n    return function errorOccured(_x16, _x17) {\n      return _ref8.apply(this, arguments);\n    };\n  }();\n\n  const getParagraphs =\n  /*#__PURE__*/\n  function () {\n    var _ref9 = _asyncToGenerator(function* (transcriptId) {\n      const querySnapshot = yield db.collection(`transcripts/${transcriptId}/paragraphs`).orderBy(\"startTime\").get();\n      const paragraphs = Array();\n      querySnapshot.forEach(doc => {\n        const paragraph = doc.data();\n        paragraphs.push(paragraph);\n      });\n      return paragraphs;\n    });\n\n    return function getParagraphs(_x18) {\n      return _ref9.apply(this, arguments);\n    };\n  }();\n\n  const getProgress =\n  /*#__PURE__*/\n  function () {\n    var _ref10 = _asyncToGenerator(function* (id) {\n      console.debug(\"database: getProgress: id: \", id);\n      const doc = yield db.doc(`transcripts/${id}`).get();\n      const transcript = doc.data();\n      console.debug(\"database: getProgress: id: \", id, \", transcriptDoc: \", transcript);\n\n      if (transcript && transcript.status) {\n        // @ts-ignore\n        return transcript.status.progress;\n      } else {\n        return _enums__WEBPACK_IMPORTED_MODULE_3__[\"ProgressType\"].NotFound;\n      }\n    });\n\n    return function getProgress(_x19) {\n      return _ref10.apply(this, arguments);\n    };\n  }();\n\n  const setPlaybackGsUrl =\n  /*#__PURE__*/\n  function () {\n    var _ref11 = _asyncToGenerator(function* (id, url) {\n      const transcript = {\n        playbackGsUrl: url\n      };\n      return updateTranscript(id, transcript);\n    });\n\n    return function setPlaybackGsUrl(_x20, _x21) {\n      return _ref11.apply(this, arguments);\n    };\n  }();\n\n  const getTranscript =\n  /*#__PURE__*/\n  function () {\n    var _ref12 = _asyncToGenerator(function* (transcriptId) {\n      const doc = yield db.doc(`transcripts/${transcriptId}`).get();\n      return doc.data();\n    });\n\n    return function getTranscript(_x22) {\n      return _ref12.apply(this, arguments);\n    };\n  }();\n\n  const deleteTranscript =\n  /*#__PURE__*/\n  function () {\n    var _ref13 = _asyncToGenerator(function* (transcriptId) {\n      console.info(\"Delete transcript by id: \", transcriptId); // Delete the paragraphs collection\n\n      const paragraphsPath = `/transcripts/${transcriptId}/paragraphs`;\n      yield deleteCollection(paragraphsPath, 10); // Delete the document\n\n      return db.doc(`transcripts/${transcriptId}`).delete();\n    });\n\n    return function deleteTranscript(_x23) {\n      return _ref13.apply(this, arguments);\n    };\n  }();\n\n  const deleteCollection =\n  /*#__PURE__*/\n  function () {\n    var _ref14 = _asyncToGenerator(function* (collectionPath, batchSize) {\n      console.info(\"Delete collection by path: \", collectionPath);\n      const collectionRef = db.collection(collectionPath);\n      const query = collectionRef.orderBy(\"__name__\").limit(batchSize);\n      return new Promise((resolve, reject) => {\n        deleteQueryBatch(query, batchSize, resolve, reject);\n      });\n    });\n\n    return function deleteCollection(_x24, _x25) {\n      return _ref14.apply(this, arguments);\n    };\n  }(); // @ts-ignore\n\n\n  const deleteQueryBatch = (query, batchSize, resolve, reject) => {\n    query.get().then(snapshot => {\n      // When there are no documents left, we are done\n      if (snapshot.size === 0) {\n        return 0;\n      } // Delete documents in a batch\n\n\n      const batch = db.batch();\n      snapshot.docs.forEach(doc => {\n        batch.delete(doc.ref);\n      });\n      return batch.commit().then(() => {\n        return snapshot.size;\n      });\n    }).then(numDeleted => {\n      if (numDeleted === 0) {\n        resolve();\n        return;\n      } // Recurse on the next process tick, to avoid\n      // exploding the stack.\n\n\n      process.nextTick(() => {\n        deleteQueryBatch(query, batchSize, resolve, reject);\n      });\n    }).catch(reject);\n  }; // @ts-ignore\n\n\n  const getTranscripts =\n  /*#__PURE__*/\n  function () {\n    var _ref15 = _asyncToGenerator(function* () {\n      const querySnapshot = yield db.collection(`transcripts/`).get();\n      const transcripts = {};\n      querySnapshot.forEach(doc => {\n        const id = doc.id;\n        const transcript = doc.data();\n        transcripts[doc.id] = transcript;\n      });\n      return transcripts;\n    });\n\n    return function getTranscripts() {\n      return _ref15.apply(this, arguments);\n    };\n  }();\n\n  const findTransciptUpdatedTodayNotDone =\n  /*#__PURE__*/\n  function () {\n    var _ref16 = _asyncToGenerator(function* () {\n      const yesterday = new Date();\n      yesterday.setDate(yesterday.getDate() - 2);\n      const startfulldate = firebase_admin__WEBPACK_IMPORTED_MODULE_0___default.a.firestore.Timestamp.fromDate(yesterday);\n      const transcripts = yield db.collection(\"transcripts\").where(\"createdAt\", \">\", startfulldate).where(\"status.progress\", \"==\", _enums__WEBPACK_IMPORTED_MODULE_3__[\"ProgressType\"].Saving).get().then(snapshot => {\n        const transcriptsSaving = {};\n        snapshot.docs.forEach(doc => {\n          const transcript = doc.data();\n\n          if (transcript && !transcript.id) {\n            console.debug(\"adding transcript.id to: \", doc.id);\n            transcript.id = doc.id;\n          }\n\n          transcriptsSaving[doc.id] = transcript;\n        });\n        return transcriptsSaving;\n      });\n      yield db.collection(\"transcripts\").where(\"createdAt\", \">\", startfulldate).where(\"status.progress\", \"==\", _enums__WEBPACK_IMPORTED_MODULE_3__[\"ProgressType\"].Transcribing).get().then(snapshot => {\n        const transcriptsTranscribingTmp = {};\n        snapshot.docs.forEach(doc => {\n          const transcript = doc.data();\n\n          if (transcript && !transcript.id) {\n            transcript.id = doc.id;\n          }\n\n          transcripts[doc.id] = transcript;\n        });\n      });\n      return transcripts;\n    });\n\n    return function findTransciptUpdatedTodayNotDone() {\n      return _ref16.apply(this, arguments);\n    };\n  }();\n\n  return {\n    addParagraph,\n    buildNewId,\n    deleteCollection,\n    deleteTranscript,\n    errorOccured,\n    findTransciptUpdatedTodayNotDone,\n    getParagraphs,\n    getProgress,\n    getTranscript,\n    getTranscripts,\n    setDuration,\n    setPercent,\n    setPlaybackGsUrl,\n    setProgress,\n    updateFlacFileLocation,\n    updateGoogleSpeechTranscribeReference,\n    updateTranscript\n  };\n})();\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (database);\n\n//# sourceURL=webpack:///./src/database.ts?");

/***/ }),

/***/ "./src/deleteTranscript/index.ts":
/*!***************************************!*\
  !*** ./src/deleteTranscript/index.ts ***!
  \***************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var firebase_functions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! firebase-functions */ \"firebase-functions\");\n/* harmony import */ var firebase_functions__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(firebase_functions__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var universal_analytics__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! universal-analytics */ \"universal-analytics\");\n/* harmony import */ var universal_analytics__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(universal_analytics__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _database__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../database */ \"./src/database.ts\");\n/* harmony import */ var _transcription_storage__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../transcription/storage */ \"./src/transcription/storage.ts\");\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n\n\n\n\n\n\nfunction deleteTranscript(_x, _x2) {\n  return _deleteTranscript.apply(this, arguments);\n}\n\nfunction _deleteTranscript() {\n  _deleteTranscript = _asyncToGenerator(function* (data, context) {\n    // ----------------\n    // Google analytics\n    // ----------------\n    const accountId = firebase_functions__WEBPACK_IMPORTED_MODULE_0__[\"config\"]().analytics.account_id;\n\n    if (!accountId) {\n      console.warn(\"Google Analytics account ID missing\");\n    }\n\n    const visitor = universal_analytics__WEBPACK_IMPORTED_MODULE_2___default()(accountId);\n\n    try {\n      // Check that transcript id is present\n      const transcriptId = data.transcriptId;\n\n      if (!transcriptId) {\n        throw new Error(\"Transcript id missing\");\n      }\n\n      const transcript = yield _database__WEBPACK_IMPORTED_MODULE_3__[\"default\"].getTranscript(transcriptId); // Setting user id\n\n      visitor.set(\"uid\", transcript.userId); // Authentication / user information is automatically added to the request\n\n      if (!context.auth) {\n        throw new Error(\"Authentication missing\");\n      }\n\n      const userId = context.auth.uid; // Check that the user owns the transcript\n\n      if (transcript.userId !== userId) {\n        throw new Error(\"User does not own the transcript\");\n      } // Step 1: Delete the transcript from database\n\n\n      yield _database__WEBPACK_IMPORTED_MODULE_3__[\"default\"].deleteTranscript(transcriptId); // Step 2: Delete the media files\n\n      const prefix = path__WEBPACK_IMPORTED_MODULE_1___default.a.join(path__WEBPACK_IMPORTED_MODULE_1___default.a.join(\"media\", userId), transcriptId); // Prefix will be /media/userId/transcriptId\n      // Using this as a prefix, we will be able to delete\n      // Prefix will be /media/userId/transcriptId-original\n      // Prefix will be /media/userId/transcriptId-playback.m4a\n      // Prefix will be /media/userId/transcriptId-transcribed.flac\n\n      yield _transcription_storage__WEBPACK_IMPORTED_MODULE_4__[\"bucket\"].deleteFiles({\n        prefix\n      });\n\n      if (transcript.status && transcript.status.progress) {\n        visitor.event(\"transcription\", \"deleted\", transcript.status.progress).send();\n      }\n\n      return {\n        success: true\n      };\n    } catch (error) {\n      // Log error to console\n      console.error(error); // Log error to Google Analytics\n\n      visitor.exception(error.message, true).send();\n      return {\n        success: false\n      };\n    }\n  });\n  return _deleteTranscript.apply(this, arguments);\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (deleteTranscript);\n\n//# sourceURL=webpack:///./src/deleteTranscript/index.ts?");

/***/ }),

/***/ "./src/enums.ts":
/*!**********************!*\
  !*** ./src/enums.ts ***!
  \**********************/
/*! exports provided: ProgressType, UpdateStatusType, InteractionType, MicrophoneDistance, OriginalMediaType, RecordingDeviceType, AudioEncoding */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ProgressType\", function() { return ProgressType; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"UpdateStatusType\", function() { return UpdateStatusType; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"InteractionType\", function() { return InteractionType; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MicrophoneDistance\", function() { return MicrophoneDistance; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"OriginalMediaType\", function() { return OriginalMediaType; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RecordingDeviceType\", function() { return RecordingDeviceType; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AudioEncoding\", function() { return AudioEncoding; });\nlet ProgressType; // The status types from UpdateProgress\n\n(function (ProgressType) {\n  ProgressType[\"NotFound\"] = \"NOT_FOUND\";\n  ProgressType[\"Uploading\"] = \"UPLOADING\";\n  ProgressType[\"Analysing\"] = \"ANALYSING\";\n  ProgressType[\"Transcribing\"] = \"TRANSCRIBING\";\n  ProgressType[\"Saving\"] = \"SAVING\";\n  ProgressType[\"Done\"] = \"DONE\";\n})(ProgressType || (ProgressType = {}));\n\nlet UpdateStatusType; // Use case categories that the audio recognition request can be described by.\n\n(function (UpdateStatusType) {\n  UpdateStatusType[\"UpdatedOk\"] = \"UPDATED_OK\";\n  UpdateStatusType[\"SpeechRecognitionInProgress\"] = \"SPEECH_RECOGNITION_IN_PROGRESS\";\n  UpdateStatusType[\"SpeechRecognitionNotStarted\"] = \"SPEECH_RECOGNITION_NOT_STARTED\";\n  UpdateStatusType[\"SpeechRecognitionMissing\"] = \"SPEECH_RECOGNITION_MISSING\";\n  UpdateStatusType[\"TranscriptionIdMissing\"] = \"TRANSCRIPTION_ID_MISSING\";\n  UpdateStatusType[\"TranscriptionMissing\"] = \"TRANSCRIPTION_MISSING\";\n})(UpdateStatusType || (UpdateStatusType = {}));\n\nlet InteractionType;\n\n(function (InteractionType) {\n  InteractionType[\"Unspecified\"] = \"INTERACTION_TYPE_UNSPECIFIED\";\n  InteractionType[\"Discussion\"] = \"DISCUSSION\";\n  InteractionType[\"Presentaton\"] = \"PRESENTATION\";\n  InteractionType[\"PhoneCall\"] = \"PHONE_CALL\";\n  InteractionType[\"Voicemail\"] = \"VOICEMAIL\";\n  InteractionType[\"ProfessionallyProduced\"] = \"PROFESSIONALLY_PRODUCED\";\n  InteractionType[\"VoiceSearch\"] = \"VOICE_SEARCH\";\n  InteractionType[\"VoiceCommand\"] = \"VOICE_COMMAND\";\n  InteractionType[\"Dictation\"] = \"DICTATION\";\n})(InteractionType || (InteractionType = {}));\n\n// Enumerates the types of capture settings describing an audio file.\nlet MicrophoneDistance;\n\n(function (MicrophoneDistance) {\n  MicrophoneDistance[\"Unspecified\"] = \"MICROPHONE_DISTANCE_UNSPECIFIED\";\n  MicrophoneDistance[\"Nearfield\"] = \"NEARFIELD\";\n  MicrophoneDistance[\"Midfield\"] = \"MIDFIELD\";\n  MicrophoneDistance[\"Farfield\"] = \"FARFIELD\";\n})(MicrophoneDistance || (MicrophoneDistance = {}));\n\n// The original media the speech was recorded on.\nlet OriginalMediaType;\n\n(function (OriginalMediaType) {\n  OriginalMediaType[\"Unspecified\"] = \"ORIGINAL_MEDIA_TYPE_UNSPECIFIED\";\n  OriginalMediaType[\"Audio\"] = \"AUDIO\";\n  OriginalMediaType[\"Video\"] = \"VIDEO\";\n})(OriginalMediaType || (OriginalMediaType = {}));\n\n// The type of device the speech was recorded with.\nlet RecordingDeviceType;\n\n(function (RecordingDeviceType) {\n  RecordingDeviceType[\"Unspecified\"] = \"RECORDING_DEVICE_TYPE_UNSPECIFIED\";\n  RecordingDeviceType[\"Smartphone\"] = \"SMARTPHONE\";\n  RecordingDeviceType[\"PC\"] = \"PC\";\n  RecordingDeviceType[\"PhoneLine\"] = \"PHONE_LINE\";\n  RecordingDeviceType[\"Vehicle\"] = \"VEHICLE\";\n  RecordingDeviceType[\"OtherOutdoorDevice\"] = \"OTHER_OUTDOOR_DEVICE\";\n  RecordingDeviceType[\"OtherIndoorDevice\"] = \"OTHER_INDOOR_DEVICE\";\n})(RecordingDeviceType || (RecordingDeviceType = {}));\n\n// The encoding of the audio data sent in the request.\nlet AudioEncoding;\n\n(function (AudioEncoding) {\n  AudioEncoding[\"Unspecified\"] = \"ENCODING_UNSPECIFIED\";\n  AudioEncoding[\"Linear16\"] = \"LINEAR16\";\n  AudioEncoding[\"Flac\"] = \"FLAC\";\n  AudioEncoding[\"Mulaw\"] = \"MULAW\";\n  AudioEncoding[\"Amr\"] = \"AMR\";\n  AudioEncoding[\"AmrWb\"] = \"AMR_WB\";\n  AudioEncoding[\"OggOpus\"] = \"OGG_OPUS\";\n  AudioEncoding[\"SpeedxWithHeaderByte\"] = \"SPEEX_WITH_HEADER_BYTE\";\n})(AudioEncoding || (AudioEncoding = {}));\n\n//# sourceURL=webpack:///./src/enums.ts?");

/***/ }),

/***/ "./src/exportTranscript/docx.ts":
/*!**************************************!*\
  !*** ./src/exportTranscript/docx.ts ***!
  \**************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var docx__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! docx */ \"docx\");\n/* harmony import */ var docx__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(docx__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _nanoSecondsToFormattedTime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./nanoSecondsToFormattedTime */ \"./src/exportTranscript/nanoSecondsToFormattedTime.ts\");\nfunction _objectValues(obj) {\n  var values = [];\n  var keys = Object.keys(obj);\n\n  for (var k = 0; k < keys.length; k++) values.push(obj[keys[k]]);\n\n  return values;\n}\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n\n\n\nfunction docx(_x, _x2, _x3) {\n  return _docx.apply(this, arguments);\n}\n\nfunction _docx() {\n  _docx = _asyncToGenerator(function* (transcript, paragraphs, response) {\n    const doc = new docx__WEBPACK_IMPORTED_MODULE_0__[\"Document\"]();\n    const tabStop = 1000;\n\n    _objectValues(paragraphs).map((paragraph, i) => {\n      const metaParagraph = new docx__WEBPACK_IMPORTED_MODULE_0__[\"Paragraph\"]().leftTabStop(tabStop);\n      let speakerName = \"\";\n\n      if (transcript.speakerNames !== undefined && paragraph.speaker !== undefined) {\n        speakerName = transcript.speakerNames[paragraph.speaker];\n      }\n\n      const speakerNameRun = new docx__WEBPACK_IMPORTED_MODULE_0__[\"TextRun\"](speakerName).bold();\n      let transcriptStartTime = 0;\n\n      if (transcript.metadata && transcript.metadata.startTime) {\n        transcriptStartTime = transcript.metadata.startTime;\n      }\n\n      const formattedStartTime = Object(_nanoSecondsToFormattedTime__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(transcriptStartTime, paragraph.startTime || 0, true, true);\n      const timeRun = new docx__WEBPACK_IMPORTED_MODULE_0__[\"TextRun\"](formattedStartTime).bold().tab();\n      metaParagraph.addRun(speakerNameRun);\n      metaParagraph.addRun(timeRun);\n      doc.addParagraph(metaParagraph);\n      const textParagraph = new docx__WEBPACK_IMPORTED_MODULE_0__[\"Paragraph\"]();\n      const words = paragraph.words.filter(word => !(word.deleted && word.deleted === true)) // Only words that are not deleted\n      .map(word => word.text).join(\" \");\n      const text = new docx__WEBPACK_IMPORTED_MODULE_0__[\"TextRun\"](words);\n      textParagraph.indent({\n        left: tabStop\n      });\n      textParagraph.addRun(text);\n      doc.addParagraph(textParagraph);\n      doc.addParagraph(new docx__WEBPACK_IMPORTED_MODULE_0__[\"Paragraph\"]());\n    });\n\n    const packer = new docx__WEBPACK_IMPORTED_MODULE_0__[\"Packer\"]();\n    const b64string = yield packer.toBase64String(doc);\n    response.setHeader(\"Content-Disposition\", `attachment; filename=${transcript.name}.docx`);\n    response.send(Buffer.from(b64string, \"base64\"));\n  });\n  return _docx.apply(this, arguments);\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (docx);\n\n//# sourceURL=webpack:///./src/exportTranscript/docx.ts?");

/***/ }),

/***/ "./src/exportTranscript/index.ts":
/*!***************************************!*\
  !*** ./src/exportTranscript/index.ts ***!
  \***************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var firebase_functions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! firebase-functions */ \"firebase-functions\");\n/* harmony import */ var firebase_functions__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(firebase_functions__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var serialize_error__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! serialize-error */ \"serialize-error\");\n/* harmony import */ var serialize_error__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(serialize_error__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var universal_analytics__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! universal-analytics */ \"universal-analytics\");\n/* harmony import */ var universal_analytics__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(universal_analytics__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _database__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../database */ \"./src/database.ts\");\n/* harmony import */ var _docx__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./docx */ \"./src/exportTranscript/docx.ts\");\n/* harmony import */ var _json__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./json */ \"./src/exportTranscript/json.ts\");\n/* harmony import */ var _xmp__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./xmp */ \"./src/exportTranscript/xmp.ts\");\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n\n\n\n\n\n\n\n\nfunction exportTranscript(_x, _x2) {\n  return _exportTranscript.apply(this, arguments);\n}\n\nfunction _exportTranscript() {\n  _exportTranscript = _asyncToGenerator(function* (request, response) {\n    // ----------------\n    // Google analytics\n    // ----------------\n    const accountId = firebase_functions__WEBPACK_IMPORTED_MODULE_0__[\"config\"]().analytics.account_id;\n\n    if (!accountId) {\n      console.warn(\"Google Analytics account ID missing\");\n    }\n\n    const visitor = universal_analytics__WEBPACK_IMPORTED_MODULE_2___default()(accountId);\n\n    try {\n      const id = request.query.id;\n\n      if (!id) {\n        throw new Error(\"Transcript id missing\");\n      }\n\n      const transcript = yield _database__WEBPACK_IMPORTED_MODULE_3__[\"default\"].getTranscript(id); // Setting user id\n\n      visitor.set(\"uid\", transcript.userId);\n      const paragraphs = yield _database__WEBPACK_IMPORTED_MODULE_3__[\"default\"].getParagraphs(id);\n      const type = request.query.type;\n\n      if (type === \"docx\") {\n        yield Object(_docx__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(transcript, paragraphs, response);\n        visitor.event(\"transcript\", \"exported\", type).send();\n      } else if (type === \"xmp\") {\n        Object(_xmp__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(transcript, paragraphs, response);\n        visitor.event(\"transcript\", \"exported\", type).send();\n      } else if (type === \"json\") {\n        Object(_json__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(transcript, paragraphs, response);\n        visitor.event(\"transcript\", \"exported\", type).send();\n      } else {\n        throw new Error(`Unknown type: ${type}`);\n      }\n    } catch (error) {\n      // Log error to console\n      console.error(error); // Log error to Google Analytics\n\n      visitor.exception(error.message, true).send();\n      response.status(500).send(serialize_error__WEBPACK_IMPORTED_MODULE_1___default()(error));\n    }\n  });\n  return _exportTranscript.apply(this, arguments);\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (exportTranscript);\n\n//# sourceURL=webpack:///./src/exportTranscript/index.ts?");

/***/ }),

/***/ "./src/exportTranscript/json.ts":
/*!**************************************!*\
  !*** ./src/exportTranscript/json.ts ***!
  \**************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nfunction _objectValues(obj) {\n  var values = [];\n  var keys = Object.keys(obj);\n\n  for (var k = 0; k < keys.length; k++) values.push(obj[keys[k]]);\n\n  return values;\n}\n\nfunction json(transcript, paragraphs, response) {\n  const jsonDoc = [];\n\n  _objectValues(paragraphs).map((paragraph, i) => {\n    let startTime = \"00:00:00\";\n\n    if (i > 0) {\n      const startTimeInSeconds = (paragraph.startTime || 0) * 1e-9; // Nano to seconds\n\n      const startTimeMatchArray = new Date(startTimeInSeconds * 1000).toUTCString().match(/(\\d\\d:\\d\\d:\\d\\d)/);\n\n      if (startTimeMatchArray !== null) {\n        startTime = startTimeMatchArray[0];\n      } else {\n        startTime = String(i);\n      }\n    }\n\n    const words = paragraph.words.map(word => word.text).join(\" \");\n    const jsonResult = {\n      startTime,\n      words\n    };\n    jsonDoc.push(jsonResult);\n  });\n\n  response.setHeader(\"Content-Type\", `application/json`);\n  response.send(JSON.stringify(jsonDoc));\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (json);\n\n//# sourceURL=webpack:///./src/exportTranscript/json.ts?");

/***/ }),

/***/ "./src/exportTranscript/nanoSecondsToFormattedTime.ts":
/*!************************************************************!*\
  !*** ./src/exportTranscript/nanoSecondsToFormattedTime.ts ***!
  \************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return nanoSecondsToFormattedTime; });\nfunction nanoSecondsToFormattedTime(startTime, nanoSeconds, showHours, showCentiSeconds) {\n  const s = (startTime + nanoSeconds) * 1e-9;\n  const hours = Math.floor(s / 3600);\n  const minutes = Math.floor(s % 3600 / 60);\n  const seconds = Math.floor(s % 3600 % 60);\n  const centiSeconds = Math.floor(s % 1 * 100);\n  const hDisplay = showHours ? hours > 9 ? `${hours}:` : `0${hours}:` : \"\";\n  const mDisplay = minutes > 9 ? `${minutes}:` : `0${minutes}:`;\n  const sDisplay = seconds > 9 ? `${seconds}` : `0${seconds}`;\n  const csDisplay = showCentiSeconds ? centiSeconds > 9 ? `:${centiSeconds}` : `:0${centiSeconds}` : \"\";\n  return hDisplay + mDisplay + sDisplay + csDisplay;\n}\n\n//# sourceURL=webpack:///./src/exportTranscript/nanoSecondsToFormattedTime.ts?");

/***/ }),

/***/ "./src/exportTranscript/xmp.ts":
/*!*************************************!*\
  !*** ./src/exportTranscript/xmp.ts ***!
  \*************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var xmlbuilder__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! xmlbuilder */ \"xmlbuilder\");\n/* harmony import */ var xmlbuilder__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(xmlbuilder__WEBPACK_IMPORTED_MODULE_0__);\n\n\nfunction xmp(transcript, paragraphs, response) {\n  const fps = 25;\n  const markers = paragraphs.map(paragraph => {\n    const words = paragraph.words.filter(word => !(word.deleted && word.deleted === true)) // Only words that are not deleted\n    .map(word => word.text).join(\" \");\n    const startTime = (paragraph.startTime || 0) * 1e-9;\n    const duration = paragraph.words[paragraph.words.length - 1].endTime * 1e-9 - startTime;\n    const marker = {\n      \"@rdf:parseType\": \"Resource\",\n      \"xmpDM:comment\": words,\n      \"xmpDM:duration\": duration * fps,\n      \"xmpDM:startTime\": startTime * fps\n    };\n\n    if (transcript.speakerNames !== undefined && paragraph.speaker !== undefined) {\n      marker[\"xmpDM:name\"] = transcript.speakerNames[paragraph.speaker];\n    }\n\n    return marker;\n  });\n  const data = {\n    \"x:xmpmeta\": {\n      \"@xmlns:x\": \"adobe:ns:meta/\",\n      \"rdf:RDF\": {\n        \"@xmlns:rdf\": \"http://www.w3.org/1999/02/22-rdf-syntax-ns#\",\n        \"rdf:Description\": {\n          \"@xmlns:xmpDM\": \"http://ns.adobe.com/xmp/1.0/DynamicMedia/\",\n          \"xmpDM:Tracks\": {\n            \"rdf:Bag\": {\n              \"rdf:li\": {\n                \"@rdf:parseType\": \"Resource\",\n                \"xmpDM:frameRate\": `f${fps}`,\n                \"xmpDM:markers\": {\n                  \"rdf:Seq\": {\n                    \"rdf:li\": markers\n                  }\n                },\n                \"xmpDM:trackName\": \"Comment\",\n                \"xmpDM:trackType\": \"Comment\"\n              }\n            }\n          }\n        }\n      }\n    }\n  };\n  const xml = xmlbuilder__WEBPACK_IMPORTED_MODULE_0___default.a.create(data, {\n    encoding: \"utf-8\"\n  }).end({\n    pretty: true\n  });\n  response.setHeader(\"Content-Disposition\", `attachment; filename=${transcript.name}.${transcript.metadata ? transcript.metadata.fileExtension : \"\"}.xmp`);\n  response.send(Buffer.from(xml));\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (xmp);\n\n//# sourceURL=webpack:///./src/exportTranscript/xmp.ts?");

/***/ }),

/***/ "./src/index.ts":
/*!**********************!*\
  !*** ./src/index.ts ***!
  \**********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var firebase_functions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! firebase-functions */ \"firebase-functions\");\n/* harmony import */ var firebase_functions__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(firebase_functions__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _api__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./api */ \"./src/api/index.ts\");\n/* harmony import */ var _api_authenticatedApi__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./api/authenticatedApi */ \"./src/api/authenticatedApi.ts\");\n/* harmony import */ var _authorization__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./authorization */ \"./src/authorization/index.ts\");\n/* harmony import */ var _deleteTranscript__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./deleteTranscript */ \"./src/deleteTranscript/index.ts\");\n/* harmony import */ var _exportTranscript__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./exportTranscript */ \"./src/exportTranscript/index.ts\");\n/* harmony import */ var _progress__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./progress */ \"./src/progress/index.ts\");\n/* harmony import */ var _swagger__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./swagger */ \"./src/swagger/index.ts\");\n/* harmony import */ var _transcription__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./transcription */ \"./src/transcription/index.ts\");\n/**\n * @file Google Cloud function\n * @author Andreas Schjønhaug\n */\n\n\n\n\n\n\n\n\n // --------------------\n// Create transcription\n// --------------------\n\nexports.transcription = firebase_functions__WEBPACK_IMPORTED_MODULE_0__[\"region\"](\"europe-west1\").runWith({\n  memory: \"2GB\",\n  timeoutSeconds: 540\n}).firestore.document(\"transcripts/{transcriptId}\").onCreate(_transcription__WEBPACK_IMPORTED_MODULE_8__[\"default\"]); // --------------------\n// Delete transcription\n// --------------------\n\nexports.deleteTranscript = firebase_functions__WEBPACK_IMPORTED_MODULE_0__[\"region\"](\"europe-west1\").runWith({\n  memory: \"2GB\",\n  timeoutSeconds: 540\n}).https.onCall(_deleteTranscript__WEBPACK_IMPORTED_MODULE_4__[\"default\"]); // --------------------\n// Update progress\n// --------------------\n\nexports.updateProgress = firebase_functions__WEBPACK_IMPORTED_MODULE_0__[\"region\"](\"europe-west1\").runWith({\n  memory: \"2GB\",\n  timeoutSeconds: 540\n}).https.onCall(_progress__WEBPACK_IMPORTED_MODULE_6__[\"default\"]); // --------------------\n// API\n// --------------------\n\nexports.createTranscriptId = firebase_functions__WEBPACK_IMPORTED_MODULE_0__[\"region\"](\"europe-west1\").https.onRequest(_api__WEBPACK_IMPORTED_MODULE_1__[\"default\"].createTranscriptId);\nexports.getTranscript = firebase_functions__WEBPACK_IMPORTED_MODULE_0__[\"region\"](\"europe-west1\").https.onRequest(_api__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getTranscript);\nexports.getUploadUrl = firebase_functions__WEBPACK_IMPORTED_MODULE_0__[\"region\"](\"europe-west1\").https.onRequest(_api__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getUploadUrl);\nexports.transcriptions = firebase_functions__WEBPACK_IMPORTED_MODULE_0__[\"region\"](\"europe-west1\").https.onRequest(_api__WEBPACK_IMPORTED_MODULE_1__[\"default\"].createTransctript);\nexports.api = firebase_functions__WEBPACK_IMPORTED_MODULE_0__[\"region\"](\"europe-west1\").https.onRequest(_api_authenticatedApi__WEBPACK_IMPORTED_MODULE_2__[\"default\"]);\nexports.swagger = firebase_functions__WEBPACK_IMPORTED_MODULE_0__[\"region\"](\"europe-west1\").https.onRequest(_swagger__WEBPACK_IMPORTED_MODULE_7__[\"default\"]);\nexports.jwttoken = firebase_functions__WEBPACK_IMPORTED_MODULE_0__[\"region\"](\"europe-west1\").https.onRequest(_authorization__WEBPACK_IMPORTED_MODULE_3__[\"default\"].authorizeADJwtToken); // ------\n// Export\n// ------\n\nexports.exportTranscript = firebase_functions__WEBPACK_IMPORTED_MODULE_0__[\"region\"](\"europe-west1\").https.onRequest(_exportTranscript__WEBPACK_IMPORTED_MODULE_5__[\"default\"]); // Catch unhandled rejections\n\nprocess.on(\"unhandledRejection\", (reason, promise) => {\n  console.error(new Error(`Unhandled Rejection at: Promise: ${promise} with reason: ${reason.stack || reason}`));\n});\n\n//# sourceURL=webpack:///./src/index.ts?");

/***/ }),

/***/ "./src/progress/index.ts":
/*!*******************************!*\
  !*** ./src/progress/index.ts ***!
  \*******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var firebase_functions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! firebase-functions */ \"firebase-functions\");\n/* harmony import */ var firebase_functions__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(firebase_functions__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var universal_analytics__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! universal-analytics */ \"universal-analytics\");\n/* harmony import */ var universal_analytics__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(universal_analytics__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _database__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../database */ \"./src/database.ts\");\n/* harmony import */ var _transcription__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../transcription */ \"./src/transcription/index.ts\");\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n\n\n\n\n\nfunction updateProgress(_x, _x2) {\n  return _updateProgress.apply(this, arguments);\n}\n\nfunction _updateProgress() {\n  _updateProgress = _asyncToGenerator(function* (data, context) {\n    // ----------------\n    // Google analytics\n    // ----------------\n    const accountId = firebase_functions__WEBPACK_IMPORTED_MODULE_0__[\"config\"]().analytics.account_id;\n\n    if (!accountId) {\n      console.warn(\"Google Analytics account ID missing\");\n    }\n\n    const visitor = universal_analytics__WEBPACK_IMPORTED_MODULE_1___default()(accountId);\n\n    try {\n      // Authentication / user information is automatically added to the request\n      if (!context.auth) {\n        throw new Error(\"Authentication missing\");\n      } // Check that transcript id is present\n\n\n      const transcriptId = data.transcriptId;\n\n      if (!transcriptId) {\n        throw new Error(\"Transcript id missing\");\n      }\n\n      const transcript = yield _database__WEBPACK_IMPORTED_MODULE_2__[\"default\"].getTranscript(transcriptId);\n      visitor.set(\"uid\", transcript.userId);\n      const userId = context.auth.uid; // Check that the user owns the transcript\n\n      if (transcript.userId !== userId) {\n        throw new Error(\"User does not own the transcript. You can not update progress on, \" + transcriptId);\n      }\n\n      console.log(\"refreshFromGoogleSpeech. transcriptionId: \", transcriptId);\n      const status = yield Object(_transcription__WEBPACK_IMPORTED_MODULE_3__[\"updateFromGoogleSpeech\"])(transcriptId);\n      return status;\n    } catch (error) {\n      // Log error to console\n      console.error(error); // Log error to Google Analytics\n\n      visitor.exception(error.message, true).send();\n      return {\n        success: false\n      };\n    }\n  });\n  return _updateProgress.apply(this, arguments);\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (updateProgress);\n\n//# sourceURL=webpack:///./src/progress/index.ts?");

/***/ }),

/***/ "./src/sendEmail/index.ts":
/*!********************************!*\
  !*** ./src/sendEmail/index.ts ***!
  \********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _sendgrid_mail__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sendgrid/mail */ \"@sendgrid/mail\");\n/* harmony import */ var _sendgrid_mail__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_sendgrid_mail__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var firebase_functions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! firebase-functions */ \"firebase-functions\");\n/* harmony import */ var firebase_functions__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(firebase_functions__WEBPACK_IMPORTED_MODULE_1__);\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n\n\n\nfunction sendEmail(_x) {\n  return _sendEmail.apply(this, arguments);\n}\n\nfunction _sendEmail() {\n  _sendEmail = _asyncToGenerator(function* (mailData) {\n    const sendgrid = firebase_functions__WEBPACK_IMPORTED_MODULE_1__[\"config\"]().sendgrid;\n\n    if (sendgrid === undefined || sendgrid.apiKey === undefined || sendgrid.name === undefined || sendgrid.email === undefined) {\n      console.warn(\"Sendgrid not set up, skipping e-mail\");\n      return;\n    }\n\n    _sendgrid_mail__WEBPACK_IMPORTED_MODULE_0___default.a.setApiKey(sendgrid.apiKey);\n    const from = {\n      email: sendgrid.email,\n      name: sendgrid.name\n    };\n    mailData.from = from;\n    yield _sendgrid_mail__WEBPACK_IMPORTED_MODULE_0___default.a.send(mailData);\n  });\n  return _sendEmail.apply(this, arguments);\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (sendEmail);\n\n//# sourceURL=webpack:///./src/sendEmail/index.ts?");

/***/ }),

/***/ "./src/speech/index.ts":
/*!*****************************!*\
  !*** ./src/speech/index.ts ***!
  \*****************************/
/*! exports provided: getOperation, fetchSpeechRecognitionResuts */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getOperation\", function() { return getOperation; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"fetchSpeechRecognitionResuts\", function() { return fetchSpeechRecognitionResuts; });\n/* harmony import */ var googleapis__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! googleapis */ \"googleapis\");\n/* harmony import */ var googleapis__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(googleapis__WEBPACK_IMPORTED_MODULE_0__);\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n\nfunction getOperation(_x) {\n  return _getOperation.apply(this, arguments);\n}\n\nfunction _getOperation() {\n  _getOperation = _asyncToGenerator(function* (name) {\n    const googleSpeechRef = name;\n\n    if (googleSpeechRef) {\n      try {\n        const googleAuth = yield googleapis__WEBPACK_IMPORTED_MODULE_0__[\"google\"].auth.getClient({\n          scopes: ['https://www.googleapis.com/auth/cloud-platform']\n        });\n        const {\n          data\n        } = yield googleapis__WEBPACK_IMPORTED_MODULE_0__[\"google\"].speech('v1').operations.get({\n          auth: googleAuth,\n          name: googleSpeechRef\n        });\n        console.log(\"Result from operations.get: \", data);\n        return data;\n      } catch (error) {\n        console.error(\"Failed to fetch operation by googleSpeechRef: \", googleSpeechRef, \". Error: \", error);\n      }\n    } else {\n      console.log();\n      return null;\n    }\n  });\n  return _getOperation.apply(this, arguments);\n}\n\nfunction fetchSpeechRecognitionResuts(_x2) {\n  return _fetchSpeechRecognitionResuts.apply(this, arguments);\n}\n\nfunction _fetchSpeechRecognitionResuts() {\n  _fetchSpeechRecognitionResuts = _asyncToGenerator(function* (operationName) {\n    let speechRecognitionResults = []; // @ts-ignore\n\n    let speechRecognitionMetadata = {};\n    const googleSpeechRef = operationName;\n\n    if (googleSpeechRef) {\n      const data = yield getOperation(googleSpeechRef);\n      console.log(\"getOpertation; operationName: \", operationName, \"; data: \", JSON.stringify(data));\n\n      if (data && data.metadata) {\n        speechRecognitionMetadata = {\n          lastUpdateTime: data.metadata.lastUpdateTime,\n          progressPercent: data.metadata.progressPercent,\n          startTime: data.metadata.startTime\n          /*\n                  data:\n                   { name: '6080322534027970989',\n            metadata:\n             { '@type': 'type.googleapis.com/google.cloud.speech.v1p1beta1.LongRunningRecognizeMetadata',\n               progressPercent: 100,\n               startTime: '2019-05-24T17:18:26.958133Z',\n               lastUpdateTime: '2019-05-24T17:18:33.168022Z' },\n            done: true,\n            response:\n             { '@type': 'type.googleapis.com/google.cloud.speech.v1p1beta1.LongRunningRecognizeResponse',\n               results: [ [Object] ] } }\n                   */\n\n        };\n        const responses = null;\n\n        if (data.done === true) {\n          const longRunningRecognizeResponse = data.response;\n          console.log(\"getOperation. responses: \", longRunningRecognizeResponse);\n\n          if (longRunningRecognizeResponse) {\n            speechRecognitionResults = longRunningRecognizeResponse.results;\n            console.log(\"complete: \", speechRecognitionResults);\n          } else {\n            console.log(\"No response found for operation googleSpeechRef: \", googleSpeechRef);\n          }\n        }\n      }\n    } else {\n      console.log(\"Required parameter 'operationName' is missing.\");\n    }\n\n    return {\n      speechRecognitionResults,\n      speechRecognitionMetadata\n    };\n  });\n  return _fetchSpeechRecognitionResuts.apply(this, arguments);\n}\n\n//# sourceURL=webpack:///./src/speech/index.ts?");

/***/ }),

/***/ "./src/swagger/index.ts":
/*!******************************!*\
  !*** ./src/swagger/index.ts ***!
  \******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var express__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! express */ \"express\");\n/* harmony import */ var express__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(express__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var swagger_ui_express__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! swagger-ui-express */ \"swagger-ui-express\");\n/* harmony import */ var swagger_ui_express__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(swagger_ui_express__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _api_api_swagger_json__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../api/api-swagger.json */ \"./src/api/api-swagger.json\");\nvar _api_api_swagger_json__WEBPACK_IMPORTED_MODULE_2___namespace = /*#__PURE__*/__webpack_require__.t(/*! ../api/api-swagger.json */ \"./src/api/api-swagger.json\", 1);\n// import {GetSignedUrlConfig} from \"@google-cloud/storage\"\n// import * as functions from \"firebase-functions\"\n// import serializeError from \"serialize-error\";\n// import database from \"../database\";\n// import {ProgressType} from \"../enums\";\n// import {ITranscript} from \"../interfaces\";\n// import {bucket} from \"../transcription/storage\"\n\n\n\nconst swaggerApp = express__WEBPACK_IMPORTED_MODULE_0___default()();\nswaggerApp.use('/', swagger_ui_express__WEBPACK_IMPORTED_MODULE_1___default.a.serve, swagger_ui_express__WEBPACK_IMPORTED_MODULE_1___default.a.setup(_api_api_swagger_json__WEBPACK_IMPORTED_MODULE_2__));\n/* harmony default export */ __webpack_exports__[\"default\"] = (swaggerApp);\n\n//# sourceURL=webpack:///./src/swagger/index.ts?");

/***/ }),

/***/ "./src/transcription/index.ts":
/*!************************************!*\
  !*** ./src/transcription/index.ts ***!
  \************************************/
/*! exports provided: updateFromGoogleSpeech, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"updateFromGoogleSpeech\", function() { return updateFromGoogleSpeech; });\n/* harmony import */ var firebase_admin__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! firebase-admin */ \"firebase-admin\");\n/* harmony import */ var firebase_admin__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(firebase_admin__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var firebase_functions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! firebase-functions */ \"firebase-functions\");\n/* harmony import */ var firebase_functions__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(firebase_functions__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var universal_analytics__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! universal-analytics */ \"universal-analytics\");\n/* harmony import */ var universal_analytics__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(universal_analytics__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _database__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../database */ \"./src/database.ts\");\n/* harmony import */ var _enums__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../enums */ \"./src/enums.ts\");\n/* harmony import */ var _sendEmail__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../sendEmail */ \"./src/sendEmail/index.ts\");\n/* harmony import */ var _speech__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../speech */ \"./src/speech/index.ts\");\n/* harmony import */ var _persistence__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./persistence */ \"./src/transcription/persistence.ts\");\n/* harmony import */ var _transcoding__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./transcoding */ \"./src/transcription/transcoding.ts\");\n/* harmony import */ var _transcribe__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./transcribe */ \"./src/transcription/transcribe.ts\");\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n\n\n\n\n\n\n\n\n\n\n\nfunction progressDone(_x, _x2, _x3, _x4, _x5) {\n  return _progressDone.apply(this, arguments);\n}\n\nfunction _progressDone() {\n  _progressDone = _asyncToGenerator(function* (savedDate, startDate, visitor, transcriptId, audioDuration) {\n    const processDuration = savedDate - startDate;\n    visitor.set(\"cm8\", Math.round(processDuration / 1000));\n    visitor.event(\"transcription\", \"done\", transcriptId, Math.round(audioDuration)).send();\n    yield _database__WEBPACK_IMPORTED_MODULE_3__[\"default\"].setProgress(transcriptId, _enums__WEBPACK_IMPORTED_MODULE_4__[\"ProgressType\"].Done);\n  });\n  return _progressDone.apply(this, arguments);\n}\n\nfunction progressSaving(_x6, _x7, _x8, _x9) {\n  return _progressSaving.apply(this, arguments);\n}\n\nfunction _progressSaving() {\n  _progressSaving = _asyncToGenerator(function* (transcriptId, speechRecognitionResults, transcribedDate, visitor) {\n    yield _database__WEBPACK_IMPORTED_MODULE_3__[\"default\"].setProgress(transcriptId, _enums__WEBPACK_IMPORTED_MODULE_4__[\"ProgressType\"].Saving);\n    yield Object(_persistence__WEBPACK_IMPORTED_MODULE_7__[\"saveParagraph\"])(speechRecognitionResults, transcriptId);\n    const savedDate = Date.now();\n    const savedDuration = savedDate - transcribedDate;\n    console.log(transcriptId, \"Saved duration\", savedDuration);\n    visitor.set(\"cm7\", Math.round(savedDuration / 1000));\n    visitor.event(\"transcription\", \"saved\", transcriptId).send();\n    visitor.timing(\"transcription\", \"saving\", Math.round(savedDuration), transcriptId).send();\n    return savedDate;\n  });\n  return _progressSaving.apply(this, arguments);\n}\n\nfunction processSpeechRecognitionResults(speechRecognitionResults, transcriptId, visitor, transcodedDate) {\n  let numberOfWords = 0;\n  let accumulatedConfidence = 0;\n\n  for (const speechRecognitionResult of speechRecognitionResults) {\n    // Accumulating number of words\n    if (speechRecognitionResult.alternatives.length > 0) {\n      numberOfWords += speechRecognitionResult.alternatives[0].words.length; // Logging confidence to GA\n\n      accumulatedConfidence += speechRecognitionResult.alternatives[0].confidence * speechRecognitionResult.alternatives[0].words.length;\n    }\n  }\n\n  console.log(transcriptId, \"Number of words\", numberOfWords); // If there are no transcribed words, we cancel the process here.\n\n  if (numberOfWords === 0) {\n    throw new Error(\"Fant ingen ord i lydfilen\");\n  }\n\n  visitor.set(\"cm4\", numberOfWords); // Calculating average confidence per word\n  // Confidence will have high precision, i.e. 0.9290443658828735\n  // We round it to two digits and log it as an integer, i.e. 9290,\n  // since GA only supports decimal numbers for currency.\n\n  const confidence = Math.round(accumulatedConfidence / numberOfWords * 100 * 100);\n  visitor.set(\"cm9\", confidence);\n  console.log(transcriptId, \"Confidence\", confidence);\n  const transcribedDate = Date.now();\n  const transcribedDuration = transcribedDate - transcodedDate;\n  visitor.set(\"cm6\", Math.round(transcribedDuration / 1000));\n  visitor.event(\"transcription\", \"transcribed\", transcriptId).send();\n  visitor.timing(\"transcription\", \"transcribing\", Math.round(transcribedDuration), transcriptId).send();\n  console.log(transcriptId, \"Transcribed duration\", transcribedDuration);\n  return transcribedDate;\n}\n\nfunction prepareAndSendEmail(_x10, _x11, _x12) {\n  return _prepareAndSendEmail.apply(this, arguments);\n}\n\nfunction _prepareAndSendEmail() {\n  _prepareAndSendEmail = _asyncToGenerator(function* (transcript, transcriptId, visitor) {\n    const domainname = firebase_functions__WEBPACK_IMPORTED_MODULE_1__[\"config\"]().webserver.domainname;\n\n    if (domainname === undefined) {\n      throw new Error(\"Domain name missing from config\");\n    } // Get user\n\n\n    const userRecord = yield firebase_admin__WEBPACK_IMPORTED_MODULE_0___default.a.auth().getUser(transcript.userId);\n    const {\n      email,\n      displayName\n    } = userRecord;\n\n    if (email === undefined) {\n      throw new Error(\"E-mail missing from user\");\n    }\n\n    const mailData = {\n      from: {\n        email: \"Will be populated in sendEmail(..)\",\n        name: \"Will be populated in sendEmail(..)\"\n      },\n      subject: `${transcript.name} er ferdig transkribert`,\n      text: `Filen ${transcript.name} er ferdig transkribert. Du finner den på ${domainname}/transcripts/${transcriptId} `,\n      to: {\n        email,\n        name: displayName\n      }\n    };\n    yield Object(_sendEmail__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(mailData);\n    visitor.event(\"email\", \"transcription done\", transcriptId).send();\n  });\n  return _prepareAndSendEmail.apply(this, arguments);\n}\n\nfunction buildGoogleAnalyticsVisitor() {\n  const accountId = firebase_functions__WEBPACK_IMPORTED_MODULE_1__[\"config\"]().analytics.account_id;\n\n  if (!accountId) {\n    console.warn(\"Google Analytics account ID missing\");\n  }\n\n  const visitor = universal_analytics__WEBPACK_IMPORTED_MODULE_2___default()(accountId);\n  return visitor;\n}\n\nfunction transcription(_x13) {\n  return _transcription.apply(this, arguments);\n}\n\nfunction _transcription() {\n  _transcription = _asyncToGenerator(function* (documentSnapshot\n  /*, eventContext*/\n  ) {\n    console.log(\"Start: \", documentSnapshot.id); // ----------------\n    // Google analytics\n    // ----------------\n\n    const visitor = buildGoogleAnalyticsVisitor();\n\n    try {\n      const startDate = Date.now();\n      const transcriptId = documentSnapshot.id; // Because of indempotency, we need to fetch the transcript from\n      // the server and check if it's already in process\n\n      console.log(\"transcription: getProgress: transcriptionId: \", transcriptId);\n      const progress = yield _database__WEBPACK_IMPORTED_MODULE_3__[\"default\"].getProgress(transcriptId);\n      console.log(\"transcription: getProgress: progress: \", progress);\n\n      if (progress !== _enums__WEBPACK_IMPORTED_MODULE_4__[\"ProgressType\"].Uploading) {\n        console.warn(\"Transcript already processed, returning. TranscriptId: \", transcriptId);\n        return;\n      } // Check for mandatory fields\n\n\n      let transcript = documentSnapshot.data();\n\n      if (transcript === undefined) {\n        throw Error(\"Transcript missing\");\n      } else if (transcript.userId === undefined) {\n        throw Error(\"User id missing\");\n      } else if (transcript.metadata === undefined) {\n        throw Error(\"Metadata missing\");\n      } else if (transcript.metadata.languageCodes === undefined) {\n        throw Error(\"Language codes missing\");\n      } else if (transcript.metadata.originalMimeType === undefined) {\n        throw Error(\"Original mime type missing\");\n      } // Setting user id\n\n\n      visitor.set(\"uid\", transcript.userId); // Setting custom dimensions\n\n      visitor.set(\"cd1\", transcript.metadata.languageCodes.join(\",\"));\n      visitor.set(\"cd2\", transcript.metadata.originalMimeType);\n\n      if (transcript.metadata.industryNaicsCodeOfAudio) {\n        visitor.set(\"cd3\", transcript.metadata.industryNaicsCodeOfAudio);\n      }\n\n      if (transcript.metadata.interactionType) {\n        visitor.set(\"cd4\", transcript.metadata.interactionType);\n      }\n\n      if (transcript.metadata.microphoneDistance) {\n        visitor.set(\"cd5\", transcript.metadata.microphoneDistance);\n      }\n\n      if (transcript.metadata.originalMediaType) {\n        visitor.set(\"cd6\", transcript.metadata.originalMediaType);\n      }\n\n      if (transcript.metadata.recordingDeviceName) {\n        visitor.set(\"cd7\", transcript.metadata.recordingDeviceName);\n      }\n\n      if (transcript.metadata.recordingDeviceType) {\n        visitor.set(\"cd8\", transcript.metadata.recordingDeviceType);\n      } // Setting custom metrics\n\n\n      visitor.set(\"cm1\", transcript.metadata.audioTopic ? transcript.metadata.audioTopic.split(\" \").length : 0);\n      visitor.set(\"cm2\", transcript.metadata.speechContexts ? transcript.metadata.speechContexts[0].phrases.length : 0); // -----------------\n      // Step 1: Transcode\n      // -----------------\n\n      yield _database__WEBPACK_IMPORTED_MODULE_3__[\"default\"].setProgress(transcriptId, _enums__WEBPACK_IMPORTED_MODULE_4__[\"ProgressType\"].Analysing);\n      console.log(\"=======================1=========================\");\n      const transcriptData = yield Object(_transcoding__WEBPACK_IMPORTED_MODULE_8__[\"transcode\"])(transcriptId, transcript.userId); // -----------------------------------------------------------------------\n      // Check if transcript has been deleted by user while transcribing\n      // -----------------------------------------------------------------------\n\n      transcript = yield _database__WEBPACK_IMPORTED_MODULE_3__[\"default\"].getTranscript(transcriptId);\n\n      if (!transcript || transcript && !transcript.metadata) {\n        console.log(transcriptId, \"Transcript deleted by user, will not save.\");\n        yield _database__WEBPACK_IMPORTED_MODULE_3__[\"default\"].deleteTranscript(transcriptId);\n        return;\n      }\n\n      yield _database__WEBPACK_IMPORTED_MODULE_3__[\"default\"].updateTranscript(transcriptId, transcriptData); // await database.updateFlacFileLocation(transcriptId, gsUri)\n\n      visitor.set(\"cm3\", Math.round(transcriptData.metadata.audioDuration));\n      const transcodedDate = Date.now();\n      const transcodedDuration = transcodedDate - startDate;\n      visitor.set(\"cm5\", Math.round(transcodedDuration / 1000));\n      visitor.event(\"transcription\", \"transcoded\", transcriptId).send();\n      visitor.timing(\"transcription\", \"transcoding\", Math.round(transcodedDuration), transcriptId).send();\n      console.log(transcriptId, \"Transcoded duration\", transcodedDuration); // ------------------\n      // Step 2: Transcribe\n      // ------------------\n\n      yield _database__WEBPACK_IMPORTED_MODULE_3__[\"default\"].setProgress(transcriptId, _enums__WEBPACK_IMPORTED_MODULE_4__[\"ProgressType\"].Transcribing);\n      const speechRecognitionResults = yield Object(_transcribe__WEBPACK_IMPORTED_MODULE_9__[\"transcribe\"])(transcriptId, transcript, transcriptData.speechData.flacFileLocationUri); // -----------------------------------------------------------------------\n      // Check if transcript has been deleted by user while transcribing\n      // -----------------------------------------------------------------------\n\n      transcript = yield _database__WEBPACK_IMPORTED_MODULE_3__[\"default\"].getTranscript(transcriptId);\n\n      if (!transcript || transcript && !transcript.metadata) {\n        console.log(transcriptId, \"Transcript deleted by user, will not save.\");\n        yield _database__WEBPACK_IMPORTED_MODULE_3__[\"default\"].deleteTranscript(transcriptId);\n        return;\n      }\n\n      const transcribedDate = processSpeechRecognitionResults(speechRecognitionResults, transcriptId, visitor, transcodedDate); // ------------\n      // Step 3: Save\n      // ------------\n\n      const savedDate = yield progressSaving(transcriptId, speechRecognitionResults, transcribedDate, visitor); // Done\n\n      yield progressDone(savedDate, startDate, visitor, transcriptId, transcriptData.metadata.audioDuration); // -------------------\n      // Step 4: Send e-mail\n      // -------------------\n\n      yield prepareAndSendEmail(transcript, transcriptId, visitor);\n    } catch (error) {\n      // Log error to console\n      console.error(error); // Log error to Google Analytics\n\n      visitor.exception(error.message, true).send(); // Log error to database\n\n      console.log(\"Write error to database. Id: \", documentSnapshot.id, \", error: \", error);\n      yield _database__WEBPACK_IMPORTED_MODULE_3__[\"default\"].errorOccured(documentSnapshot.id, error);\n      throw error;\n    }\n  });\n  return _transcription.apply(this, arguments);\n}\n\nfunction updateFromGoogleSpeech(_x14) {\n  return _updateFromGoogleSpeech.apply(this, arguments);\n}\n\nfunction _updateFromGoogleSpeech() {\n  _updateFromGoogleSpeech = _asyncToGenerator(function* (transcriptId) {\n    // @ts-ignore\n    const updated = {};\n\n    if (!transcriptId) {\n      updated.updateStatus = _enums__WEBPACK_IMPORTED_MODULE_4__[\"UpdateStatusType\"].TranscriptionIdMissing;\n      return updated;\n    } else {\n      updated.transcriptId = transcriptId;\n    }\n\n    const visitor = buildGoogleAnalyticsVisitor();\n\n    try {\n      const transcript = yield _database__WEBPACK_IMPORTED_MODULE_3__[\"default\"].getTranscript(transcriptId);\n\n      if (transcript && transcript.speechData && transcript.metadata) {\n        const transcodedDate = transcript.metadata.startTime;\n        const startDate = transcript.metadata.startTime;\n        const audioDuration = transcript.metadata.audioDuration;\n        const googleSpeechRef = transcript.speechData.reference;\n\n        if (googleSpeechRef) {\n          // Fetch results from Google Operations\n          const {\n            speechRecognitionResults,\n            speechRecognitionMetadata\n          } = yield Object(_speech__WEBPACK_IMPORTED_MODULE_6__[\"fetchSpeechRecognitionResuts\"])(googleSpeechRef);\n          console.log(transcriptId, \", updateFromGoogleSpeech; speechRecognitionResults: \", speechRecognitionResults);\n\n          if (speechRecognitionResults && speechRecognitionResults.length > 0) {\n            if (speechRecognitionMetadata.progressPercent === 100) {\n              // Process the Results\n              const transcribedDate = processSpeechRecognitionResults(speechRecognitionResults, transcriptId, visitor, transcodedDate);\n              console.log(transcriptId, \", updateFromGoogleSpeech; processedResults\"); // Save to recocnition results to database\n\n              const savedDate = yield progressSaving(transcriptId, speechRecognitionResults, transcribedDate, visitor);\n              console.log(transcriptId, \", updateFromGoogleSpeech; processedResults\"); // Done\n\n              yield progressDone(savedDate, startDate, visitor, transcriptId, audioDuration);\n              console.log(transcriptId, \", updateFromGoogleSpeech; processedResults\");\n              updated.updateStatus = _enums__WEBPACK_IMPORTED_MODULE_4__[\"UpdateStatusType\"].UpdatedOk;\n              updated.lastUpdated = speechRecognitionMetadata.lastUpdateTime;\n            } else {\n              updated.updateStatus = _enums__WEBPACK_IMPORTED_MODULE_4__[\"UpdateStatusType\"].SpeechRecognitionInProgress;\n              updated.lastUpdated = speechRecognitionMetadata.lastUpdateTime;\n            }\n          } else {\n            updated.updateStatus = _enums__WEBPACK_IMPORTED_MODULE_4__[\"UpdateStatusType\"].SpeechRecognitionMissing;\n            updated.transcriptionProgressPercent = speechRecognitionMetadata.progressPercent;\n            updated.lastUpdated = speechRecognitionMetadata.lastUpdateTime;\n            yield Object(_transcribe__WEBPACK_IMPORTED_MODULE_9__[\"persistTranscribeProgressPercent\"])(speechRecognitionMetadata, transcriptId);\n          }\n        } else {\n          updated.updateStatus = _enums__WEBPACK_IMPORTED_MODULE_4__[\"UpdateStatusType\"].SpeechRecognitionNotStarted;\n          console.log(transcriptId, \", updateFromGoogleSpeech; Missing 'transcript.speechData.reference' in transcript document. TranscriptId: \", transcriptId);\n        }\n      } else {\n        console.log(\"Failed to fetch transcript with speechData from transcriptId: \", transcriptId, \": transcript: \", transcript);\n        updated.updateStatus = _enums__WEBPACK_IMPORTED_MODULE_4__[\"UpdateStatusType\"].UpdatedOk;\n      }\n    } catch (error) {\n      console.error(transcriptId, \" updateFromGoogleSpeech; \", error);\n      visitor.exception(error.message, true).send();\n      yield _database__WEBPACK_IMPORTED_MODULE_3__[\"default\"].errorOccured(transcriptId, error);\n      throw error;\n    }\n\n    return updated;\n  });\n  return _updateFromGoogleSpeech.apply(this, arguments);\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (transcription);\n\n//# sourceURL=webpack:///./src/transcription/index.ts?");

/***/ }),

/***/ "./src/transcription/persistence.ts":
/*!******************************************!*\
  !*** ./src/transcription/persistence.ts ***!
  \******************************************/
/*! exports provided: saveParagraph */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"saveParagraph\", function() { return saveParagraph; });\n/* harmony import */ var _database__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../database */ \"./src/database.ts\");\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n/**\n * @file Saves transcrips to database\n * @author Andreas Schjønhaug\n */\n\nfunction saveParagraph(_x, _x2) {\n  return _saveParagraph.apply(this, arguments);\n}\n\nfunction _saveParagraph() {\n  _saveParagraph = _asyncToGenerator(function* (speechRecognitionResults, transcriptId) {\n    for (const index of speechRecognitionResults.keys()) {\n      const recognitionResult = speechRecognitionResults[index].alternatives[0];\n      const words = recognitionResult.words.map(wordInfo => {\n        let startTime = 0;\n\n        if (wordInfo.startTime) {\n          if (wordInfo.startTime.seconds) {\n            startTime = parseInt(wordInfo.startTime.seconds, 10) * 1e9;\n          } else if (wordInfo.startTime && !wordInfo.startTime.nanos) {\n            // @ts-ignore\n            startTime = parseInt(wordInfo.startTime, 10) * 1e9;\n          }\n\n          if (wordInfo.startTime.nanos) {\n            startTime += wordInfo.startTime.nanos;\n          }\n        }\n\n        let endTime = 0;\n\n        if (wordInfo.endTime) {\n          if (wordInfo.endTime.seconds) {\n            endTime = parseInt(wordInfo.endTime.seconds, 10) * 1e9;\n          } else if (wordInfo.endTime && !wordInfo.endTime.nanos) {\n            // @ts-ignore\n            startTime = parseInt(wordInfo.endTime, 10) * 1e9;\n          }\n\n          if (wordInfo.endTime.nanos) {\n            endTime += wordInfo.endTime.nanos;\n          }\n        }\n\n        const word = {\n          confidence: wordInfo.confidence,\n          endTime,\n          startTime,\n          text: wordInfo.word\n        };\n        return word;\n      }); // Transform startTime and endTime's seconds and nanos\n\n      const paragraph = {\n        startTime: words[0].startTime,\n        words\n      };\n      const percent = Math.round((index + 1) / speechRecognitionResults.length * 100);\n      yield _database__WEBPACK_IMPORTED_MODULE_0__[\"default\"].addParagraph(transcriptId, paragraph, percent);\n      console.log(transcriptId, `Prosent lagret: ${percent}%`);\n    }\n  });\n  return _saveParagraph.apply(this, arguments);\n}\n\n//# sourceURL=webpack:///./src/transcription/persistence.ts?");

/***/ }),

/***/ "./src/transcription/storage.ts":
/*!**************************************!*\
  !*** ./src/transcription/storage.ts ***!
  \**************************************/
/*! exports provided: bucketName, bucket */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"bucketName\", function() { return bucketName; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"bucket\", function() { return bucket; });\n/* harmony import */ var firebase_admin__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! firebase-admin */ \"firebase-admin\");\n/* harmony import */ var firebase_admin__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(firebase_admin__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var firebase_functions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! firebase-functions */ \"firebase-functions\");\n/* harmony import */ var firebase_functions__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(firebase_functions__WEBPACK_IMPORTED_MODULE_1__);\n/**\n * @file Sets up Storage\n * @author Andreas Schjønhaug\n */\n\n // Only initialise the app once\n\nif (!firebase_admin__WEBPACK_IMPORTED_MODULE_0___default.a.apps.length) {\n  firebase_admin__WEBPACK_IMPORTED_MODULE_0___default.a.initializeApp(firebase_functions__WEBPACK_IMPORTED_MODULE_1__[\"config\"]().firebase);\n} else {\n  firebase_admin__WEBPACK_IMPORTED_MODULE_0___default.a.app();\n}\n\nconst storage = firebase_admin__WEBPACK_IMPORTED_MODULE_0___default.a.storage(); // Getting the bucket reference from Google Cloud Runtime Configuration API\n\nconst bucketName = firebase_functions__WEBPACK_IMPORTED_MODULE_1__[\"config\"]().bucket.name;\n\nif (bucketName === undefined) {\n  throw Error(\"Environment variable 'bucket.name' not set up\");\n}\n\nconst bucket = storage.bucket(bucketName);\n\n//# sourceURL=webpack:///./src/transcription/storage.ts?");

/***/ }),

/***/ "./src/transcription/transcoding.ts":
/*!******************************************!*\
  !*** ./src/transcription/transcoding.ts ***!
  \******************************************/
/*! exports provided: metadata, getMetadata, transcode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"metadata\", function() { return metadata; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getMetadata\", function() { return getMetadata; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"transcode\", function() { return transcode; });\n/* harmony import */ var ffmpeg_static__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ffmpeg-static */ \"ffmpeg-static\");\n/* harmony import */ var ffmpeg_static__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(ffmpeg_static__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var ffprobe_static__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ffprobe-static */ \"ffprobe-static\");\n/* harmony import */ var ffprobe_static__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(ffprobe_static__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var fluent_ffmpeg__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! fluent-ffmpeg */ \"fluent-ffmpeg\");\n/* harmony import */ var fluent_ffmpeg__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(fluent_ffmpeg__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! fs */ \"fs\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(fs__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var os__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! os */ \"os\");\n/* harmony import */ var os__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(os__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _database__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../database */ \"./src/database.ts\");\n/* harmony import */ var _storage__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./storage */ \"./src/transcription/storage.ts\");\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n/**\n * @file Converts uploaded audio to mono channel using FFmpeg\n * @author Andreas Schjønhaug\n */\n\n\n\n\n\n\n\n // let audioDuration: number\n//\n\n/**\n * Using ffprobe to get metadata about the file\n * @param tempFilePath\n */\nfunction metadata(_x) {\n  return _metadata.apply(this, arguments);\n}\n/**\n * Using exiftool to get metadata about the file\n * @param tempFilePath\n */\n\nfunction _metadata() {\n  _metadata = _asyncToGenerator(function* (tempFilePath) {\n    return new Promise((resolve, reject) => {\n      fluent_ffmpeg__WEBPACK_IMPORTED_MODULE_2___default()(tempFilePath).ffprobe((error, data) => {\n        if (error) {\n          reject(error);\n        }\n\n        resolve(data);\n      });\n    });\n  });\n  return _metadata.apply(this, arguments);\n}\n\nfunction getMetadata(_x2) {\n  return _getMetadata.apply(this, arguments);\n}\n/**\n * Utility method to convert audio to mono channel using FFMPEG.\n *\n * Command line equivalent:\n * ffmpeg -i input -y -ac 1 -vn -f flac output\n *\n */\n\nfunction _getMetadata() {\n  _getMetadata = _asyncToGenerator(function* (tempFilePath) {\n    const exiftool = __webpack_require__(/*! node-exiftool */ \"node-exiftool\");\n\n    const ep = new exiftool.ExiftoolProcess();\n    return new Promise((resolve, reject) => {\n      ep.open().then(() => ep.readMetadata(tempFilePath, [\"-File:all\"])).then(metadata => resolve(metadata)).then(() => ep.close()).catch(error => reject(error));\n    });\n  });\n  return _getMetadata.apply(this, arguments);\n}\n\nfunction reencodeToFlacMono(_x3, _x4, _x5) {\n  return _reencodeToFlacMono.apply(this, arguments);\n}\n/**\n * Utility method to convert audio to MP4.\n *\n * Command line equivalent:\n * ffmpeg -i input -y -ac 2 -vn -f mp4 output.m4a\n *\n */\n\n\nfunction _reencodeToFlacMono() {\n  _reencodeToFlacMono = _asyncToGenerator(function* (tempFilePath, targetTempFilePath, transcriptId) {\n    return new Promise((resolve, reject) => {\n      fluent_ffmpeg__WEBPACK_IMPORTED_MODULE_2___default()(tempFilePath).setFfmpegPath(ffmpeg_static__WEBPACK_IMPORTED_MODULE_0___default.a.path).audioChannels(1).noVideo().format(\"flac\")\n      /*DEBUG\n      .on(\"start\", commandLine => {\n        console.log(\"flac: Spawned Ffmpeg with command: \" + commandLine)\n      })*/\n      .on(\"error\", err => {\n        reject(err);\n      }).on(\"end\", () => {\n        resolve();\n      }) // .on(\"codecData\", async data => {\n      // Saving duration to database\n      // audioDuration = hoursMinutesSecondsToSeconds(data.duration)\n      // try {\n      //   await database.setDuration(transcriptId, audioDuration)\n      // } catch (error) {\n      //   console.log(transcriptId, \"Error in transcoding on('codecData')\", error)\n      // }\n      // })\n      .save(targetTempFilePath);\n    });\n  });\n  return _reencodeToFlacMono.apply(this, arguments);\n}\n\nfunction reencodeToM4a(_x6, _x7) {\n  return _reencodeToM4a.apply(this, arguments);\n}\n/**\n * When an audio is uploaded in the Storage bucket we generate a mono channel audio automatically using\n * node-fluent-ffmpeg.\n */\n\n\nfunction _reencodeToM4a() {\n  _reencodeToM4a = _asyncToGenerator(function* (input, output) {\n    return new Promise((resolve, reject) => {\n      fluent_ffmpeg__WEBPACK_IMPORTED_MODULE_2___default()(input).setFfmpegPath(ffmpeg_static__WEBPACK_IMPORTED_MODULE_0___default.a.path).audioChannels(2).noVideo().format(\"mp4\")\n      /* DEBUG\n      .on(\"start\", commandLine => {\n        console.log(\"mp4: Spawned Ffmpeg with command: \" + commandLine)\n      })*/\n      .on(\"error\", err => {\n        reject(err);\n      }).on(\"end\", () => {\n        resolve();\n      }).save(output);\n    });\n  });\n  return _reencodeToM4a.apply(this, arguments);\n}\n\nfunction transcode(_x8, _x9) {\n  return _transcode.apply(this, arguments);\n}\n\nfunction _transcode() {\n  _transcode = _asyncToGenerator(function* (transcriptId, userId) {\n    // -----------------------------------\n    // 1. Check that we have an audio file\n    // -----------------------------------\n    const mediaPath = path__WEBPACK_IMPORTED_MODULE_5___default.a.join(\"media\", userId);\n    const file = _storage__WEBPACK_IMPORTED_MODULE_7__[\"bucket\"].file(path__WEBPACK_IMPORTED_MODULE_5___default.a.join(mediaPath, `${transcriptId}-original`));\n    console.log(\"=====2======\");\n    const [fileMetadata] = yield file.getMetadata();\n    const contentType = fileMetadata.contentType;\n    console.log(\"=====3======\"); // Exit if this is triggered on a file that is not audio.\n\n    if (contentType === undefined || !contentType.startsWith(\"audio/\") && !contentType.startsWith(\"video/\") && contentType !== \"application/mxf\") {\n      throw Error(\"Uploaded file is not an audio or video file\");\n    } // ------------------------------\n    // 2. Download file and transcode\n    // ------------------------------\n\n\n    const tempFilePath = path__WEBPACK_IMPORTED_MODULE_5___default.a.join(os__WEBPACK_IMPORTED_MODULE_4___default.a.tmpdir(), transcriptId);\n    console.log(\"=====4======\", tempFilePath);\n    yield file.download({\n      destination: tempFilePath\n    });\n    console.log(\"=====5======\", tempFilePath); // ----------------\n    // 3. Get metadata\n    // ----------------\n    // Setting up ffmpeg\n\n    fluent_ffmpeg__WEBPACK_IMPORTED_MODULE_2___default.a.setFfmpegPath(ffmpeg_static__WEBPACK_IMPORTED_MODULE_0___default.a.path);\n    fluent_ffmpeg__WEBPACK_IMPORTED_MODULE_2___default.a.setFfprobePath(ffprobe_static__WEBPACK_IMPORTED_MODULE_1___default.a.path);\n    const ffProbeData = yield metadata(tempFilePath);\n    console.log(\"ffProbeData\", ffProbeData);\n    const {\n      audioDuration,\n      audioFileNeedsTranscodingToFlacMono,\n      channelLayout,\n      fileExtension,\n      originalMimeType,\n      timecode\n    } = getInfoFromffProbeData(ffProbeData);\n    console.log(transcriptId, \"audioDuration\", audioDuration);\n    const exiftoolData = yield getMetadata(tempFilePath);\n    console.log(\"exiftoolData:  \", exiftoolData);\n    const info = getInfoFromExiftoolData(exiftoolData);\n    console.log(\"framesPerSecond:  \", info.framesPerSecond);\n    console.log(\"timecode:  \", info.timecode);\n    let data = {\n      audioDuration,\n      channelLayout,\n      fileExtension,\n      originalMimeType\n    };\n\n    if (timecode !== 0) {\n      data = _objectSpread({}, data, {\n        timecode\n      });\n    } else if (info.timecode !== 0) {\n      data = _objectSpread({}, data, {\n        timecode: info.timecode\n      });\n    }\n\n    if (info.framesPerSecond !== 0) {\n      data = _objectSpread({}, data, {\n        framesPerSecond: info.framesPerSecond\n      });\n    } // Transcode to m4a\n\n\n    const playbackFileName = `${transcriptId}-playback.m4a`;\n    const playbackTempFilePath = path__WEBPACK_IMPORTED_MODULE_5___default.a.join(os__WEBPACK_IMPORTED_MODULE_4___default.a.tmpdir(), playbackFileName);\n    yield reencodeToM4a(tempFilePath, playbackTempFilePath);\n    const playbackStorageFilePath = path__WEBPACK_IMPORTED_MODULE_5___default.a.join(mediaPath, playbackFileName);\n    const [playbackFile] = yield _storage__WEBPACK_IMPORTED_MODULE_7__[\"bucket\"].upload(playbackTempFilePath, {\n      destination: playbackStorageFilePath,\n      resumable: false\n    });\n    const playbackGsUrl = \"gs://\" + path__WEBPACK_IMPORTED_MODULE_5___default.a.join(_storage__WEBPACK_IMPORTED_MODULE_7__[\"bucketName\"], mediaPath, playbackFileName);\n    yield _database__WEBPACK_IMPORTED_MODULE_6__[\"default\"].setPlaybackGsUrl(transcriptId, playbackGsUrl); // Transcode to FLAC mono\n\n    const transcribeFileName = `${transcriptId}-transcribed.flac`;\n    const transcribeTempFilePath = path__WEBPACK_IMPORTED_MODULE_5___default.a.join(os__WEBPACK_IMPORTED_MODULE_4___default.a.tmpdir(), transcribeFileName);\n\n    if (audioFileNeedsTranscodingToFlacMono) {\n      // To FLAC mono\n      console.log(\"Transcoding to FLAC mono\");\n      yield reencodeToFlacMono(tempFilePath, transcribeTempFilePath, transcriptId);\n    } else {\n      console.log(\"Don't need to transcode to FLAC mono\");\n    }\n\n    const targetStorageFilePath = path__WEBPACK_IMPORTED_MODULE_5___default.a.join(mediaPath, transcribeFileName);\n    yield _storage__WEBPACK_IMPORTED_MODULE_7__[\"bucket\"].upload(transcribeTempFilePath, {\n      destination: targetStorageFilePath,\n      resumable: false\n    }); // Once the audio has been uploaded delete the local file to free up disk space.\n\n    fs__WEBPACK_IMPORTED_MODULE_3___default.a.unlinkSync(tempFilePath);\n    fs__WEBPACK_IMPORTED_MODULE_3___default.a.unlinkSync(playbackTempFilePath);\n    fs__WEBPACK_IMPORTED_MODULE_3___default.a.unlinkSync(transcribeTempFilePath);\n    const transcript = {\n      metadata: data,\n      speechData: {\n        flacFileLocationUri: `gs://${_storage__WEBPACK_IMPORTED_MODULE_7__[\"bucketName\"]}/${targetStorageFilePath}`\n      }\n    };\n    return transcript;\n  });\n  return _transcode.apply(this, arguments);\n}\n\nfunction fileHasSupportedAudioEncoding(codecName, channelLayout, sampleRate) {\n  const allowedCodecNames = [\"FLAC\", \"LINEAR16\", \"MULAW\", \"AMR_NB\", \"AMR_WB\", \"OGG_OPUS\", \"SPEEX_WITH_HEADER_BYTE\"];\n\n  if (!allowedCodecNames.includes(codecName) || channelLayout !== \"mono\") {\n    return false;\n  }\n\n  if (codecName === \"FLAC\" || codecName === \"LINEAR16\" || codecName === \"MULAW\") {\n    return true;\n  } else if (codecName === \"AMR\" && sampleRate === 8000) {\n    return true;\n  } else if (codecName === \"AMR_WB\" && sampleRate === 16000) {\n    return true;\n  } else if (codecName === \"OGG_OPUS\" && (sampleRate === 8000 || sampleRate === 12000 || sampleRate === 16000 || sampleRate === 24000 || sampleRate === 48000)) {\n    return true;\n  } else if (codecName === \"SPEEX_WITH_HEADER_BYTE\" && sampleRate === 16000) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction getInfoFromffProbeData(ffProbeData) {\n  let timecode = 0;\n  let audioFileNeedsTranscodingToFlacMono = false;\n  let channelLayout = \"\";\n  let originalMimeType = \"\"; // Trying to calculate timecode\n\n  if (ffProbeData.streams.length > 0) {\n    const stream = ffProbeData.streams[0];\n    const sampleRate = stream.sample_rate;\n    originalMimeType = stream.codec_type + \"/\" + stream.codec_name;\n\n    if (ffProbeData.format.tags) {\n      const timeReference = ffProbeData.format.tags.time_reference;\n\n      if (sampleRate && timeReference) {\n        timecode = timeReference / sampleRate * 1e9;\n      }\n    }\n\n    const codecName = stream.codec_name.toUpperCase();\n    channelLayout = stream.channel_layout;\n    audioFileNeedsTranscodingToFlacMono = !fileHasSupportedAudioEncoding(codecName, channelLayout, sampleRate);\n  }\n\n  const audioDuration = ffProbeData.format.duration;\n  const fileExtension = ffProbeData.format.format_name;\n  return {\n    audioDuration,\n    audioFileNeedsTranscodingToFlacMono,\n    channelLayout,\n    fileExtension,\n    originalMimeType,\n    timecode\n  };\n}\n\nfunction getInfoFromExiftoolData(metadata) {\n  let framesPerSecond = 0;\n  let timecode = 0;\n  let startTimecodeTimeValue = null;\n  const data = metadata.data;\n  const tags = data && data.length > 0 ? data[0] : null;\n\n  if (tags && tags.hasOwnProperty(\"StartTimeScale\")) {\n    framesPerSecond = tags[\"StartTimeScale\"];\n  }\n\n  if (tags && tags.hasOwnProperty(\"StartTimecodeTimeValue\")) {\n    startTimecodeTimeValue = tags[\"StartTimecodeTimeValue\"];\n  }\n\n  if (framesPerSecond !== 0 && startTimecodeTimeValue !== null) {\n    const timeArray = startTimecodeTimeValue.split(\":\");\n\n    if (timeArray.length === 4) {\n      timecode = (parseInt(timeArray[0]) * 3600 + parseInt(timeArray[1]) * 60 + parseInt(timeArray[2]) + parseInt(timeArray[3]) / framesPerSecond) * 1e9;\n    }\n  }\n\n  return {\n    framesPerSecond,\n    timecode\n  };\n}\n\n//# sourceURL=webpack:///./src/transcription/transcoding.ts?");

/***/ }),

/***/ "./src/transcription/transcribe.ts":
/*!*****************************************!*\
  !*** ./src/transcription/transcribe.ts ***!
  \*****************************************/
/*! exports provided: persistTranscribeProgressPercent, transcribe */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"persistTranscribeProgressPercent\", function() { return persistTranscribeProgressPercent; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"transcribe\", function() { return transcribe; });\n/* harmony import */ var _google_cloud_speech__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @google-cloud/speech */ \"@google-cloud/speech\");\n/* harmony import */ var _google_cloud_speech__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_google_cloud_speech__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _database__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../database */ \"./src/database.ts\");\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n/**\n * @file Transcripts audio with Google Speech\n * @author Andreas Schjønhaug\n */\n\n\nconst client = new _google_cloud_speech__WEBPACK_IMPORTED_MODULE_0___default.a.v1p1beta1.SpeechClient();\nfunction persistTranscribeProgressPercent(_x, _x2) {\n  return _persistTranscribeProgressPercent.apply(this, arguments);\n}\n\nfunction _persistTranscribeProgressPercent() {\n  _persistTranscribeProgressPercent = _asyncToGenerator(function* (longRunningRecognizeMetadata, transcriptId) {\n    const percent = longRunningRecognizeMetadata.progressPercent;\n\n    if (percent !== undefined) {\n      try {\n        yield _database__WEBPACK_IMPORTED_MODULE_1__[\"default\"].setPercent(transcriptId, percent);\n      } catch (error) {\n        console.log(transcriptId, \"Error in on.('progress')\");\n        console.error(transcriptId, error);\n      }\n    }\n\n    console.log(transcriptId, \"progressPercent\", longRunningRecognizeMetadata.progressPercent\n    /*, apiResponse*/\n    );\n  });\n  return _persistTranscribeProgressPercent.apply(this, arguments);\n}\n\nfunction trans(_x3, _x4) {\n  return _trans.apply(this, arguments);\n}\n\nfunction _trans() {\n  _trans = _asyncToGenerator(function* (operation, transcriptId) {\n    return new Promise((resolve, reject) => {\n      operation.on(\"complete\", (longRunningRecognizeResponse\n      /*, longRunningRecognizeMetadata, finalApiResponse*/\n      ) => {\n        // Adding a listener for the \"complete\" event starts polling for the\n        // completion of the operation.\n        const speechRecognitionResults = longRunningRecognizeResponse.results;\n        resolve(speechRecognitionResults);\n      }).on(\"progress\",\n      /*#__PURE__*/\n      function () {\n        var _ref = _asyncToGenerator(function* (longRunningRecognizeMetadata\n        /*, apiResponse*/\n        ) {\n          // Adding a listener for the \"progress\" event causes the callback to be\n          // called on any change in metadata when the operation is polled.\n          yield persistTranscribeProgressPercent(longRunningRecognizeMetadata, transcriptId);\n        });\n\n        return function (_x8) {\n          return _ref.apply(this, arguments);\n        };\n      }()).on(\"error\", error => {\n        // Adding a listener for the \"error\" event handles any errors found during polling.\n        reject(error);\n      });\n    });\n  });\n  return _trans.apply(this, arguments);\n}\n\nfunction transcribe(_x5, _x6, _x7) {\n  return _transcribe.apply(this, arguments);\n}\n\nfunction _transcribe() {\n  _transcribe = _asyncToGenerator(function* (transcriptId, transcript, uri) {\n    if (!transcript.metadata || !transcript.metadata.languageCodes || transcript.metadata.languageCodes.length === 0) {\n      throw new Error(\"Language codes missing\");\n    }\n\n    const languageCode = transcript.metadata.languageCodes.shift();\n    const enableAutomaticPunctuation = languageCode === \"en-US\"; // Only working for en-US at the moment\n\n    const recognitionMetadata = {\n      audioTopic: transcript.metadata.audioTopic,\n      // An arbitrary description of the subject matter discussed in the audio file. Examples include \"Guided tour of New York City,\" \"court trial hearing,\" or \"live interview between 2 people.\"\n      industryNaicsCodeOfAudio: transcript.metadata.industryNaicsCodeOfAudio,\n      // The industry vertical of the audio file, as a 6-digit NAICS code.\n      interactionType: transcript.metadata.interactionType,\n      // The use case of the audio.\n      microphoneDistance: transcript.metadata.microphoneDistance,\n      // The distance of the microphone from the speaker.\n      originalMediaType: transcript.metadata.originalMediaType,\n      // The original media of the audio, either audio or video.\n      originalMimeType: transcript.metadata.originalMimeType,\n      // The MIME type of the original audio file. Examples include audio/m4a, audio/x-alaw-basic, audio/mp3, audio/3gpp, or other audio file MIME type.\n      recordingDeviceName: transcript.metadata.recordingDeviceName,\n      // The device used to make the recording. This arbitrary string can include names like 'Pixel XL', 'VoIP', 'Cardioid Microphone', or other value.\n      recordingDeviceType: transcript.metadata.recordingDeviceType // The kind of device used to capture the audio, including smartphones, PC microphones, vehicles, etc.\n\n    };\n    const recognitionRequest = {\n      audio: {\n        uri\n      },\n      config: {\n        enableAutomaticPunctuation,\n        enableWordConfidence: true,\n        enableWordTimeOffsets: true,\n        languageCode,\n        metadata: recognitionMetadata,\n        model: \"default\",\n        speechContexts: transcript.metadata.speechContexts,\n        useEnhanced: false\n      }\n    };\n\n    if (transcript.metadata.languageCodes.length > 0) {\n      recognitionRequest.config.alternativeLanguageCodes = transcript.metadata.languageCodes;\n    }\n\n    console.log(transcriptId, \"Start transcribing\", recognitionRequest); // Detects speech in the audio file. This creates a recognition job that you\n    // can wait for now, or get its result later.\n\n    const responses = yield client.longRunningRecognize(recognitionRequest);\n    const operation = responses[0];\n    const initialApiResponse = responses[1];\n    const googleSpeechRef = initialApiResponse.name;\n    yield _database__WEBPACK_IMPORTED_MODULE_1__[\"default\"].updateGoogleSpeechTranscribeReference(transcriptId, googleSpeechRef);\n    console.log(\"Response from longRunningRecognize: transcriptId \", transcriptId, \"operation\", operation, \" initailApiResponse \", initialApiResponse);\n    const speechRecognitionResults = yield trans(operation, transcriptId);\n    return speechRecognitionResults;\n  });\n  return _transcribe.apply(this, arguments);\n}\n\n//# sourceURL=webpack:///./src/transcription/transcribe.ts?");

/***/ }),

/***/ "@google-cloud/speech":
/*!***************************************!*\
  !*** external "@google-cloud/speech" ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"@google-cloud/speech\");\n\n//# sourceURL=webpack:///external_%22@google-cloud/speech%22?");

/***/ }),

/***/ "@sendgrid/mail":
/*!*********************************!*\
  !*** external "@sendgrid/mail" ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"@sendgrid/mail\");\n\n//# sourceURL=webpack:///external_%22@sendgrid/mail%22?");

/***/ }),

/***/ "cookie-parser":
/*!********************************!*\
  !*** external "cookie-parser" ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"cookie-parser\");\n\n//# sourceURL=webpack:///external_%22cookie-parser%22?");

/***/ }),

/***/ "cors":
/*!***********************!*\
  !*** external "cors" ***!
  \***********************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"cors\");\n\n//# sourceURL=webpack:///external_%22cors%22?");

/***/ }),

/***/ "docx":
/*!***********************!*\
  !*** external "docx" ***!
  \***********************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"docx\");\n\n//# sourceURL=webpack:///external_%22docx%22?");

/***/ }),

/***/ "express":
/*!**************************!*\
  !*** external "express" ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"express\");\n\n//# sourceURL=webpack:///external_%22express%22?");

/***/ }),

/***/ "ffmpeg-static":
/*!********************************!*\
  !*** external "ffmpeg-static" ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"ffmpeg-static\");\n\n//# sourceURL=webpack:///external_%22ffmpeg-static%22?");

/***/ }),

/***/ "ffprobe-static":
/*!*********************************!*\
  !*** external "ffprobe-static" ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"ffprobe-static\");\n\n//# sourceURL=webpack:///external_%22ffprobe-static%22?");

/***/ }),

/***/ "firebase-admin":
/*!*********************************!*\
  !*** external "firebase-admin" ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"firebase-admin\");\n\n//# sourceURL=webpack:///external_%22firebase-admin%22?");

/***/ }),

/***/ "firebase-functions":
/*!*************************************!*\
  !*** external "firebase-functions" ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"firebase-functions\");\n\n//# sourceURL=webpack:///external_%22firebase-functions%22?");

/***/ }),

/***/ "fluent-ffmpeg":
/*!********************************!*\
  !*** external "fluent-ffmpeg" ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"fluent-ffmpeg\");\n\n//# sourceURL=webpack:///external_%22fluent-ffmpeg%22?");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"fs\");\n\n//# sourceURL=webpack:///external_%22fs%22?");

/***/ }),

/***/ "googleapis":
/*!*****************************!*\
  !*** external "googleapis" ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"googleapis\");\n\n//# sourceURL=webpack:///external_%22googleapis%22?");

/***/ }),

/***/ "jsonwebtoken":
/*!*******************************!*\
  !*** external "jsonwebtoken" ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"jsonwebtoken\");\n\n//# sourceURL=webpack:///external_%22jsonwebtoken%22?");

/***/ }),

/***/ "node-exiftool":
/*!********************************!*\
  !*** external "node-exiftool" ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"node-exiftool\");\n\n//# sourceURL=webpack:///external_%22node-exiftool%22?");

/***/ }),

/***/ "os":
/*!*********************!*\
  !*** external "os" ***!
  \*********************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"os\");\n\n//# sourceURL=webpack:///external_%22os%22?");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"path\");\n\n//# sourceURL=webpack:///external_%22path%22?");

/***/ }),

/***/ "serialize-error":
/*!**********************************!*\
  !*** external "serialize-error" ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"serialize-error\");\n\n//# sourceURL=webpack:///external_%22serialize-error%22?");

/***/ }),

/***/ "swagger-ui-express":
/*!*************************************!*\
  !*** external "swagger-ui-express" ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"swagger-ui-express\");\n\n//# sourceURL=webpack:///external_%22swagger-ui-express%22?");

/***/ }),

/***/ "universal-analytics":
/*!**************************************!*\
  !*** external "universal-analytics" ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"universal-analytics\");\n\n//# sourceURL=webpack:///external_%22universal-analytics%22?");

/***/ }),

/***/ "xmlbuilder":
/*!*****************************!*\
  !*** external "xmlbuilder" ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"xmlbuilder\");\n\n//# sourceURL=webpack:///external_%22xmlbuilder%22?");

/***/ })

/******/ });